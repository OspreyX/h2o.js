{
  "schemas": [
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "NetworkEvent",
      "superclass": "EventV2",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_send",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Boolean flag distinguishing between sends (true) and receives(false)",
          "label": "is_send",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "protocol",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "unknown",
          "help": "network protocol (UDP/TCP)",
          "label": "protocol",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "msg_type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "unknown",
          "help": "UDP type (exec,ack, ackack,...",
          "label": "msg_type",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "from",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "unknown",
          "help": "Sending node",
          "label": "from",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "to",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "unknown",
          "help": "Receiving node",
          "label": "to",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "data",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "unknown",
          "help": "Pretty print of the first few bytes of the msg payload. Contains class name for tasks.",
          "label": "data",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "date",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Time when the event was recorded. Format is hh:mm:ss:ms",
          "label": "date",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nanos",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": -1,
          "help": "Time in nanos",
          "label": "nanos",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "enum",
          "is_schema": false,
          "schema_name": "EventType",
          "value": "unknown",
          "help": "type of recorded event",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "unknown",
            "heartbeat",
            "network_msg",
            "io"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "NetworkEvent",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NetworkEvent\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nis_send | false | critical | boolean | false |  | false | Boolean flag distinguishing between sends (true) and receives(false) |  | [] | []\nprotocol | false | critical | string | false |  | unknown | network protocol (UDP/TCP) |  | [] | []\nmsg_type | false | critical | string | false |  | unknown | UDP type (exec,ack, ackack,... |  | [] | []\nfrom | false | critical | string | false |  | unknown | Sending node |  | [] | []\nto | false | critical | string | false |  | unknown | Receiving node |  | [] | []\ndata | false | critical | string | false |  | unknown | Pretty print of the first few bytes of the msg payload. Contains class name for tasks. |  | [] | []\ndate | false | critical | string | false |  | (null) | Time when the event was recorded. Format is hh:mm:ss:ms |  | [] | []\nnanos | false | critical | long | false |  | -1 | Time in nanos |  | [] | []\ntype | false | critical | enum | false |  | unknown | type of recorded event | [unknown, heartbeat, network_msg, io] | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@147cd6de | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DownloadDataV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Key of file to download",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "hex_string",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Emit double values in a machine readable lossless format with Double.toHexString().",
          "label": "hex_string",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "csv",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "CSV Stream",
          "label": "csv",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "filename",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Suggested Filename",
          "label": "filename",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DownloadDataV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DownloadDataV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Frame> | true | FrameKeyV3 | (null) | Key of file to download |  | [] | []\nhex_string | false | critical | boolean | false |  | false | Emit double values in a machine readable lossless format with Double.toHexString(). |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ncsv | string | false |  | (null) | CSV Stream |  | [] | []\nfilename | string | false |  | (null) | Suggested Filename |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@251b6084 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "H2OErrorV3",
      "superclass": "Schema",
      "type": "H2OError",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "timestamp",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Milliseconds since the epoch for the time that this H2OError instance was created.  Generally this is a short time since the underlying error ocurred.",
          "label": "timestamp",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "error_url",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Error url",
          "label": "error_url",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Message intended for the end user (a data scientist).",
          "label": "msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dev_msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Potentially more detailed message intended for a developer (e.g. a front end engineer or someone designing a language binding).",
          "label": "dev_msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status code for this error.",
          "label": "http_status",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "values",
          "type": "Map<String,Object>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Any values that are relevant to reporting or handling this error.  Examples are a key name if the error is on a key, or a field name and object name if it's on a specific field.",
          "label": "values",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exception_type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Exception type, if any.",
          "label": "exception_type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exception_msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Raw exception message, if any.",
          "label": "exception_msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "stacktrace",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Stacktrace, if any.",
          "label": "stacktrace",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "H2OErrorV3",
            "schema_type": "H2OError"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  H2OErrorV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ntimestamp | long | false |  | 0 | Milliseconds since the epoch for the time that this H2OError instance was created.  Generally this is a short time since the underlying error ocurred. |  | [] | []\nerror_url | string | false |  | (null) | Error url |  | [] | []\nmsg | string | false |  | (null) | Message intended for the end user (a data scientist). |  | [] | []\ndev_msg | string | false |  | (null) | Potentially more detailed message intended for a developer (e.g. a front end engineer or someone designing a language binding). |  | [] | []\nhttp_status | int | false |  | 0 | HTTP status code for this error. |  | [] | []\nvalues | Map<String,Object> | false |  | (null) | Any values that are relevant to reporting or handling this error.  Examples are a key name if the error is on a key, or a field name and object name if it's on a specific field. |  | [] | []\nexception_type | string | false |  | (null) | Exception type, if any. |  | [] | []\nexception_msg | string | false |  | (null) | Raw exception message, if any. |  | [] | []\nstacktrace | string[] | false |  | (null) | Stacktrace, if any. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@285d8d24 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "UnlockKeysV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "UnlockKeysV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  UnlockKeysV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@15dd4b30 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "PCAParametersV3",
      "superclass": "ModelParametersSchema",
      "type": "PCAParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "transform",
          "type": "enum",
          "is_schema": false,
          "schema_name": "TransformType",
          "value": null,
          "help": "Transformation of training data",
          "label": "transform",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "NONE",
            "STANDARDIZE",
            "NORMALIZE",
            "DEMEAN",
            "DESCALE"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Rank of matrix approximation",
          "label": "k",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "gamma",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Regularization weight",
          "label": "gamma",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_iterations",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum training iterations",
          "label": "max_iterations",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "seed",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "RNG seed for k-means++ initialization",
          "label": "seed",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "init",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Initialization",
          "value": null,
          "help": "Initialization mode",
          "label": "init",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "PlusPlus",
            "User"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "user_points",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "User-specified initial Y",
          "label": "user_points",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "loading_key",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Frame key to save resulting X",
          "label": "loading_key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "PCAParametersV3",
            "schema_type": "PCAParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  PCAParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ntransform | false | critical | enum | false |  | (null) | Transformation of training data | [NONE, STANDARDIZE, NORMALIZE, DEMEAN, DESCALE] | [] | []\nk | true | critical | int | false |  | 0 | Rank of matrix approximation |  | [] | []\ngamma | false | critical | double | false |  | 0.0 | Regularization weight |  | [] | []\nmax_iterations | false | critical | int | false |  | 0 | Maximum training iterations |  | [] | []\nseed | false | critical | long | false |  | 0 | RNG seed for k-means++ initialization |  | [] | []\ninit | false | critical | enum | false |  | (null) | Initialization mode | [PlusPlus, User] | [] | []\nuser_points | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | User-specified initial Y |  | [] | []\nloading_key | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Frame key to save resulting X |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5d3c6c41 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "PCAModelV3",
      "superclass": "ModelSchema",
      "type": "PCAModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "PCAParameters",
          "is_schema": true,
          "schema_name": "PCAParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "PCAOutput",
          "is_schema": true,
          "schema_name": "PCAModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "PCAModelV3",
            "schema_type": "PCAModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  PCAModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | PCAParameters | true | PCAParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | PCAOutput | true | PCAModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@29e74f39 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ShutdownV3",
      "superclass": "Schema",
      "type": "Shutdown",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ShutdownV3",
            "schema_type": "Shutdown"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ShutdownV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@11023cad | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "JobKeyV3",
      "superclass": "KeyV3",
      "type": "Key<Job>",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for this Key.",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for the type of Keyed this Key points to.",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "URL",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "URL for the resource that this Key points to, if one exists.",
          "label": "URL",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "JobKeyV3",
            "schema_type": "Key<Job>"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  JobKeyV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nname | false | critical | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | false | critical | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | false | critical | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@29dd8a94 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ModelOutputSchema",
      "superclass": "Schema",
      "type": "Output",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableBase",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableBase",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ModelOutputSchema",
            "schema_type": "Output"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelOutputSchema\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableBase | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableBase | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@fb51005 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "FramesBase",
      "superclass": "Schema",
      "type": "Frames",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Key of Frame of interest",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "column",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name of column of interest",
          "label": "column",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "row_offset",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Row offset to display",
          "label": "row_offset",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "row_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of rows to display",
          "label": "row_count",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "find_compatible_models",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Find and return compatible models?",
          "label": "find_compatible_models",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "path",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "File output path",
          "label": "path",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "force",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Overwrite existing fil",
          "label": "force",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frames",
          "type": "Frame[]",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Frames",
          "label": "frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_models",
          "type": "Model[]",
          "is_schema": true,
          "schema_name": "ModelSchema",
          "value": null,
          "help": "Compatible models",
          "label": "compatible_models",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domain",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains",
          "label": "domain",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "FramesBase",
            "schema_type": "Frames"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  FramesBase\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Key of Frame of interest |  | [] | []\ncolumn | false | critical | string | false |  | (null) | Name of column of interest |  | [] | []\nrow_offset | false | critical | long | false |  | 0 | Row offset to display |  | [] | []\nrow_count | false | critical | int | false |  | 0 | Number of rows to display |  | [] | []\nfind_compatible_models | false | critical | boolean | false |  | false | Find and return compatible models? |  | [] | []\npath | false | critical | string | false |  | (null) | File output path |  | [] | []\nforce | false | critical | boolean | false |  | false | Overwrite existing fil |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nrow_offset | long | false |  | 0 | Row offset to display |  | [] | []\nrow_count | int | false |  | 0 | Number of rows to display |  | [] | []\nframes | Frame[] | true | FrameV3 | (null) | Frames |  | [] | []\ncompatible_models | Model[] | true | ModelSchema | (null) | Compatible models |  | [] | []\ndomain | string[][] | false |  | (null) | Domains |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@382ec051 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "FrameKeyV3",
      "superclass": "KeyV3",
      "type": "Key<Frame>",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for this Key.",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for the type of Keyed this Key points to.",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "URL",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "URL for the resource that this Key points to, if one exists.",
          "label": "URL",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "FrameKeyV3",
            "schema_type": "Key<Frame>"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  FrameKeyV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nname | false | critical | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | false | critical | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | false | critical | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@55422a8 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "NaiveBayesV3",
      "superclass": "SupervisedModelBuilderSchema",
      "type": "NaiveBayes",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "NaiveBayesParameters",
          "is_schema": true,
          "schema_name": "NaiveBayesParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "NaiveBayesParametersV3",
              "schema_type": "NaiveBayesParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "response_column": null,
            "balance_classes": false,
            "class_sampling_factors": null,
            "max_after_balance_size": 0,
            "max_confusion_matrix_size": 0,
            "max_hit_ratio_k": 0,
            "laplace": 0,
            "min_sdev": 0,
            "eps_sdev": 0,
            "min_prob": 0,
            "eps_prob": 0
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "NaiveBayesV3",
            "schema_type": "NaiveBayes"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NaiveBayesV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | NaiveBayesParameters | true | NaiveBayesParametersV3 | hex.schemas.NaiveBayesV3$NaiveBayesParametersV3@56af4653 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@d321f9b | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "SharedTreeModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "SharedTreeOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "variable_importances",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Variable Importances",
          "label": "variable_importances",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "SharedTreeModelOutputV3",
            "schema_type": "SharedTreeOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SharedTreeModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nvariable_importances | TwoDimTable | true | TwoDimTableV3 | (null) | Variable Importances |  | [] | []\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@55b8ffe1 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "PCAModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "PCAOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "iterations",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Iterations executed",
          "label": "iterations",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "archetypes",
          "type": "double[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Mapping from training data to lower dimensional k-space",
          "label": "archetypes",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "std_deviation",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Standard deviation of each principal component",
          "label": "std_deviation",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "eigenvectors",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Principal components matrix",
          "label": "eigenvectors",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "pc_importance",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Importance of each principal component",
          "label": "pc_importance",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "PCAModelOutputV3",
            "schema_type": "PCAOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  PCAModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\niterations | false | critical | int | false |  | 0 | Iterations executed |  | [] | []\narchetypes | false | critical | double[][] | false |  | (null) | Mapping from training data to lower dimensional k-space |  | [] | []\nstd_deviation | false | critical | double[] | false |  | (null) | Standard deviation of each principal component |  | [] | []\neigenvectors | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Principal components matrix |  | [] | []\npc_importance | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Importance of each principal component |  | [] | []\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@64a738be | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GLMV3",
      "superclass": "SupervisedModelBuilderSchema",
      "type": "GLM",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "GLMParameters",
          "is_schema": true,
          "schema_name": "GLMParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "GLMParametersV3",
              "schema_type": "GLMParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "response_column": null,
            "balance_classes": false,
            "class_sampling_factors": null,
            "max_after_balance_size": 0,
            "max_confusion_matrix_size": 0,
            "max_hit_ratio_k": 0,
            "solver": null,
            "standardize": false,
            "max_iterations": 50,
            "beta_epsilon": 0,
            "family": null,
            "link": "family_default",
            "tweedie_variance_power": 0,
            "tweedie_link_power": 0,
            "alpha": null,
            "lambda": null,
            "prior": 0,
            "lambda_search": false,
            "nlambdas": 0,
            "lambda_min_ratio": 0,
            "use_all_factor_levels": false,
            "beta_constraints": null
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GLMV3",
            "schema_type": "GLM"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GLMV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | GLMParameters | true | GLMParametersV3 | hex.schemas.GLMV3$GLMParametersV3@47be9a9b | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@32985ae9 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GrepV3",
      "superclass": "ModelBuilderSchema",
      "type": "Grep",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "GrepParameters",
          "is_schema": true,
          "schema_name": "GrepParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "GrepParametersV3",
              "schema_type": "GrepParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "regex": null
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GrepV3",
            "schema_type": "Grep"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GrepV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | GrepParameters | true | GrepParametersV3 | hex.schemas.GrepV3$GrepParametersV3@307890f2 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@3b7418ba | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelMetricsListSchemaV3",
      "superclass": "Schema",
      "type": "ModelMetricsList",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Key of Model of interest (optional)",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Key of Frame of interest (optional)",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Key of predictions frame, if predictions are requested (optional)",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "reconstruction_error",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Compute reconstruction error (optional, only for Deep Learning AutoEncoder models)",
          "label": "reconstruction_error",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "deep_features_hidden_layer",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Extract Deep Features for given hidden layer (optional, only for Deep Learning models)",
          "label": "deep_features_hidden_layer",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_metrics",
          "type": "ModelMetrics[]",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "ModelMetrics",
          "label": "model_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelMetricsListSchemaV3",
            "schema_type": "ModelMetricsList"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsListSchemaV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Key of Model of interest (optional) |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Key of Frame of interest (optional) |  | [] | []\ndestination_key | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Key of predictions frame, if predictions are requested (optional) |  | [] | []\nreconstruction_error | false | critical | boolean | false |  | false | Compute reconstruction error (optional, only for Deep Learning AutoEncoder models) |  | [] | []\ndeep_features_hidden_layer | false | critical | int | false |  | 0 | Extract Deep Features for given hidden layer (optional, only for Deep Learning models) |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | Key<Frame> | true | FrameKeyV3 | (null) | Key of predictions frame, if predictions are requested (optional) |  | [] | []\nmodel_metrics | ModelMetrics[] | true | ModelMetricsBase | (null) | ModelMetrics |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@430379d4 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "VarImpV3",
      "superclass": "VarImpBase",
      "type": "VarImp",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "varimp",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Variable importance of individual variables",
          "label": "varimp",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Names of variables",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "VarImpV3",
            "schema_type": "VarImp"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  VarImpV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nvarimp | float[] | false |  | (null) | Variable importance of individual variables |  | [] | []\nnames | string[] | false |  | (null) | Names of variables |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@19336fab | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GBMParametersV3",
      "superclass": "SharedTreeParametersV3",
      "type": "GBMParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "learn_rate",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Learning rate from 0.0 to 1.0",
          "label": "learn_rate",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "loss",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Family",
          "value": null,
          "help": "Loss function",
          "label": "loss",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "AUTO",
            "bernoulli",
            "multinomial",
            "gaussian"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ntrees",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of trees.",
          "label": "ntrees",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_depth",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum tree depth.",
          "label": "max_depth",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "min_rows",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fewest allowed observations in a leaf (in R called 'nodesize').",
          "label": "min_rows",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nbins",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Build a histogram of this many bins, then split at the best point",
          "label": "nbins",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "seed",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Seed for pseudo random number generator (if applicable)",
          "label": "seed",
          "required": false,
          "level": "expert",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "treeStats",
          "type": "TreeStats",
          "is_schema": true,
          "schema_name": "TreeStatsV3",
          "value": null,
          "help": "More in-depth tree stats",
          "label": "treeStats",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "r2",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "r2 metric on validation set: 1-(MSE(model)/variance(response))",
          "label": "r2",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse_train",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Training set error per-tree (scored).",
          "label": "mse_train",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse_valid",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Validation set error per-tree (scored).",
          "label": "mse_valid",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "varimp",
          "type": "VarImp",
          "is_schema": true,
          "schema_name": "VarImpV3",
          "value": null,
          "help": "Variable Importance",
          "label": "varimp",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "response_column",
          "type": "VecSpecifier",
          "is_schema": true,
          "schema_name": "ColSpecifierV2",
          "value": null,
          "help": "Response column",
          "label": "response_column",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": [
            "ignored_columns"
          ]
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "balance_classes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "label": "balance_classes",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "class_sampling_factors",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes.",
          "label": "class_sampling_factors",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_after_balance_size",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "label": "max_after_balance_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_confusion_matrix_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum size (# classes) for confusion matrices to be printed in the Logs",
          "label": "max_confusion_matrix_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_hit_ratio_k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable)",
          "label": "max_hit_ratio_k",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GBMParametersV3",
            "schema_type": "GBMParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GBMParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nlearn_rate | false | critical | float | false |  | 0.0 | Learning rate from 0.0 to 1.0 |  | [] | []\nloss | false | critical | enum | false |  | (null) | Loss function | [AUTO, bernoulli, multinomial, gaussian] | [] | []\nntrees | false | critical | int | false |  | 0 | Number of trees. |  | [] | []\nmax_depth | false | critical | int | false |  | 0 | Maximum tree depth. |  | [] | []\nmin_rows | false | critical | int | false |  | 0 | Fewest allowed observations in a leaf (in R called 'nodesize'). |  | [] | []\nnbins | false | critical | int | false |  | 0 | Build a histogram of this many bins, then split at the best point |  | [] | []\nseed | false | expert | long | false |  | 0 | Seed for pseudo random number generator (if applicable) |  | [] | []\nresponse_column | false | critical | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | false | secondary | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | false | expert | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | false | expert | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | false | expert | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | false | expert | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ntreeStats | TreeStats | true | TreeStatsV3 | (null) | More in-depth tree stats |  | [] | []\nr2 | double | false |  | 0.0 | r2 metric on validation set: 1-(MSE(model)/variance(response)) |  | [] | []\nmse_train | double[] | false |  | (null) | Training set error per-tree (scored). |  | [] | []\nmse_valid | double[] | false |  | (null) | Validation set error per-tree (scored). |  | [] | []\nvarimp | VarImp | true | VarImpV3 | (null) | Variable Importance |  | [] | []\nresponse_column | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7cdd93a5 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "Word2VecParametersV3",
      "superclass": "ModelParametersSchema",
      "type": "Word2VecParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "vecSize",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Set size of word vectors",
          "label": "vecSize",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "windowSize",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Set max skip length between words",
          "label": "windowSize",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sentSampleRate",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Set threshold for occurrence of words. Those that appear with higher frequency in the training data\n\t\twill be randomly down-sampled; useful range is (0, 1e-5)",
          "label": "sentSampleRate",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "normModel",
          "type": "enum",
          "is_schema": false,
          "schema_name": "NormModel",
          "value": null,
          "help": "Use Hierarchical Softmax or Negative Sampling",
          "label": "normModel",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "HSM",
            "NegSampling"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "negSampleCnt",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of negative examples, common values are 3 - 10 (0 = not used)",
          "label": "negSampleCnt",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "epochs",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of training iterations to run",
          "label": "epochs",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "minWordFreq",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "This will discard words that appear less than <int> times",
          "label": "minWordFreq",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "initLearningRate",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Set the starting learning rate",
          "label": "initLearningRate",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "wordModel",
          "type": "enum",
          "is_schema": false,
          "schema_name": "WordModel",
          "value": null,
          "help": "Use the continuous bag of words model or the Skip-Gram model",
          "label": "wordModel",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "CBOW",
            "SkipGram"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "Word2VecParametersV3",
            "schema_type": "Word2VecParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  Word2VecParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nvecSize | true | critical | int | false |  | 0 | Set size of word vectors |  | [] | []\nwindowSize | true | critical | int | false |  | 0 | Set max skip length between words |  | [] | []\nsentSampleRate | true | critical | float | false |  | 0.0 | Set threshold for occurrence of words. Those that appear with higher frequency in the training data\n\t\twill be randomly down-sampled; useful range is (0, 1e-5) |  | [] | []\nnormModel | true | critical | enum | false |  | (null) | Use Hierarchical Softmax or Negative Sampling | [HSM, NegSampling] | [] | []\nnegSampleCnt | true | critical | int | false |  | 0 | Number of negative examples, common values are 3 - 10 (0 = not used) |  | [] | []\nepochs | true | critical | int | false |  | 0 | Number of training iterations to run |  | [] | []\nminWordFreq | true | critical | int | false |  | 0 | This will discard words that appear less than <int> times |  | [] | []\ninitLearningRate | true | critical | float | false |  | 0.0 | Set the starting learning rate |  | [] | []\nwordModel | true | critical | enum | false |  | (null) | Use the continuous bag of words model or the Skip-Gram model | [CBOW, SkipGram] | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@38cc9aee | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "NaiveBayesParametersV3",
      "superclass": "SupervisedModelParametersSchema",
      "type": "NaiveBayesParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "laplace",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Laplace smoothing parameter",
          "label": "laplace",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "min_sdev",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Min. standard deviation to use for observations with not enough data",
          "label": "min_sdev",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "eps_sdev",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Cutoff below which standard deviation is replaced with min_sdev",
          "label": "eps_sdev",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "min_prob",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Min. probability to use for observations with not enough data",
          "label": "min_prob",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "eps_prob",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Cutoff below which standard deviation is replaced with min_sdev",
          "label": "eps_prob",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "response_column",
          "type": "VecSpecifier",
          "is_schema": true,
          "schema_name": "ColSpecifierV2",
          "value": null,
          "help": "Response column",
          "label": "response_column",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": [
            "ignored_columns"
          ]
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "balance_classes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "label": "balance_classes",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "class_sampling_factors",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes.",
          "label": "class_sampling_factors",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_after_balance_size",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "label": "max_after_balance_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_confusion_matrix_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum size (# classes) for confusion matrices to be printed in the Logs",
          "label": "max_confusion_matrix_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_hit_ratio_k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable)",
          "label": "max_hit_ratio_k",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "NaiveBayesParametersV3",
            "schema_type": "NaiveBayesParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NaiveBayesParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nlaplace | false | critical | double | false |  | 0.0 | Laplace smoothing parameter |  | [] | []\nmin_sdev | false | critical | double | false |  | 0.0 | Min. standard deviation to use for observations with not enough data |  | [] | []\neps_sdev | false | critical | double | false |  | 0.0 | Cutoff below which standard deviation is replaced with min_sdev |  | [] | []\nmin_prob | false | critical | double | false |  | 0.0 | Min. probability to use for observations with not enough data |  | [] | []\neps_prob | false | critical | double | false |  | 0.0 | Cutoff below which standard deviation is replaced with min_sdev |  | [] | []\nresponse_column | false | critical | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | false | secondary | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | false | expert | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | false | expert | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | false | expert | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | false | expert | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nresponse_column | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@3e2469a6 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "JStackV3",
      "superclass": "Schema",
      "type": "JStack",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "traces",
          "type": "DStackTrace[]",
          "is_schema": true,
          "schema_name": "DStackTraceV2",
          "value": null,
          "help": "Stacktraces",
          "label": "traces",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "JStackV3",
            "schema_type": "JStack"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  JStackV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ntraces | DStackTrace[] | true | DStackTraceV2 | (null) | Stacktraces |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@48943129 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GLMModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "GLMOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "best_lambda_idx",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "bets lambda if doing lambda search",
          "label": "best_lambda_idx",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "threshold",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The decision threshold to be used in classification; defaults to maximum_F1",
          "label": "threshold",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "coefficients_table",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Table of coefficients",
          "label": "coefficients_table",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "coefficients_magnitude",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Coefficient magnitudes",
          "label": "coefficients_magnitude",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "residual_deviance",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Residual Deviance - Training",
          "label": "residual_deviance",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "null_deviance",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Null Deviance - Training",
          "label": "null_deviance",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "residual_degrees_of_freedom",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Residual Degrees of Freedom - Training",
          "label": "residual_degrees_of_freedom",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "null_degrees_of_freedom",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Null Degrees of Freedom - Training",
          "label": "null_degrees_of_freedom",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "aic",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "AIC - Training",
          "label": "aic",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "auc",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "AUC - Training",
          "label": "auc",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "binomial",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "fill me in GLMModelOutputV2; I think I'm redundant",
          "label": "binomial",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rank",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "fill me in GLMModelOutputV2",
          "label": "rank",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GLMModelOutputV3",
            "schema_type": "GLMOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GLMModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nbest_lambda_idx | false | critical | int | false |  | 0 | bets lambda if doing lambda search |  | [] | []\nthreshold | false | critical | double | false |  | 0.0 | The decision threshold to be used in classification; defaults to maximum_F1 |  | [] | []\ncoefficients_table | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Table of coefficients |  | [] | []\ncoefficients_magnitude | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Coefficient magnitudes |  | [] | []\nresidual_deviance | false | critical | double | false |  | 0.0 | Residual Deviance - Training |  | [] | []\nnull_deviance | false | critical | double | false |  | 0.0 | Null Deviance - Training |  | [] | []\nresidual_degrees_of_freedom | false | critical | double | false |  | 0.0 | Residual Degrees of Freedom - Training |  | [] | []\nnull_degrees_of_freedom | false | critical | double | false |  | 0.0 | Null Degrees of Freedom - Training |  | [] | []\naic | false | critical | double | false |  | 0.0 | AIC - Training |  | [] | []\nauc | false | critical | double | false |  | 0.0 | AUC - Training |  | [] | []\nbinomial | false | critical | boolean | false |  | false | fill me in GLMModelOutputV2; I think I'm redundant |  | [] | []\nrank | false | critical | int | false |  | 0 | fill me in GLMModelOutputV2 |  | [] | []\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@79279ff8 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 2,
      "name": "ValidationMessageV2",
      "superclass": "ValidationMessageBase",
      "type": "ValidationMessage",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "message_type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Type of validation message (ERROR, WARN, INFO, HIDE)",
          "label": "message_type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "field_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Field to which the message applies",
          "label": "field_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "message",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Message text",
          "label": "message",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 2,
            "schema_name": "ValidationMessageV2",
            "schema_type": "ValidationMessage"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ValidationMessageV2\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmessage_type | string | false |  | (null) | Type of validation message (ERROR, WARN, INFO, HIDE) |  | [] | []\nfield_name | string | false |  | (null) | Field to which the message applies |  | [] | []\nmessage | string | false |  | (null) | Message text |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@187790ec | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "Word2VecModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "Word2VecOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "Word2VecModelOutputV3",
            "schema_type": "Word2VecOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  Word2VecModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@51cb8280 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "JobsV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Job>",
          "is_schema": true,
          "schema_name": "JobKeyV3",
          "value": null,
          "help": "Optional Job key",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "jobs",
          "type": "Job[]",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "jobs",
          "label": "jobs",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "JobsV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  JobsV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | false | critical | Key<Job> | true | JobKeyV3 | (null) | Optional Job key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\njobs | Job[] | true | JobV3 | (null) | jobs |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7e4cb74 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ClusteringModelBuilderSchema",
      "superclass": "ModelBuilderSchema",
      "type": "ClusteringModelBuilder",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Parameters",
          "is_schema": true,
          "schema_name": "ModelParametersSchema",
          "value": {
            "__meta": {
              "schema_version": -1,
              "schema_name": "ClusteringModelParametersSchema",
              "schema_type": "ClusteringParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "k": 0
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageBase",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ClusteringModelBuilderSchema",
            "schema_type": "ClusteringModelBuilder"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ClusteringModelBuilderSchema\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | Parameters | true | ModelParametersSchema | water.api.ClusteringModelParametersSchema@3de930b8 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageBase | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@187d9fc9 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GBMV3",
      "superclass": "SharedTreeV3",
      "type": "GBM",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "GBMParameters",
          "is_schema": true,
          "schema_name": "GBMParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "GBMParametersV3",
              "schema_type": "GBMParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "response_column": null,
            "balance_classes": false,
            "class_sampling_factors": null,
            "max_after_balance_size": 0,
            "max_confusion_matrix_size": 0,
            "max_hit_ratio_k": 0,
            "ntrees": 0,
            "max_depth": 0,
            "min_rows": 0,
            "nbins": 0,
            "seed": 0,
            "treeStats": null,
            "r2": 0,
            "mse_train": null,
            "mse_valid": null,
            "varimp": null,
            "learn_rate": 0,
            "loss": null
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GBMV3",
            "schema_type": "GBM"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GBMV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | GBMParameters | true | GBMParametersV3 | hex.schemas.GBMV3$GBMParametersV3@5f8551ae | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@29b5a780 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DeepLearningParametersV3",
      "superclass": "SupervisedModelParametersSchema",
      "type": "DeepLearningParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "keep_cross_validation_splits",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Keep cross-validation Frames",
          "label": "keep_cross_validation_splits",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checkpoint",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model checkpoint to resume training with",
          "label": "checkpoint",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "override_with_best_model",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "If enabled, override the final model with the best model found during training",
          "label": "override_with_best_model",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "autoencoder",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Auto-Encoder",
          "label": "autoencoder",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "use_all_factor_levels",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Use all factor levels of categorical variables. Otherwise, the first factor level is omitted (without loss of accuracy). Useful for variable importances and auto-enabled for autoencoder.",
          "label": "use_all_factor_levels",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "activation",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Activation",
          "value": null,
          "help": "Activation function",
          "label": "activation",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [
            "Tanh",
            "TanhWithDropout",
            "Rectifier",
            "RectifierWithDropout",
            "Maxout",
            "MaxoutWithDropout"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "hidden",
          "type": "int[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Hidden layer sizes (e.g. 100,100).",
          "label": "hidden",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "epochs",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "How many times the dataset should be iterated (streamed), can be fractional",
          "label": "epochs",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "train_samples_per_iteration",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of training samples (globally) per MapReduce iteration. Special values are 0: one epoch, -1: all available data (e.g., replicated training data), -2: automatic",
          "label": "train_samples_per_iteration",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "target_ratio_comm_to_comp",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Target ratio of communication overhead to computation. Only for multi-node operation and train_samples_per_iteration=-2 (auto-tuning)",
          "label": "target_ratio_comm_to_comp",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "seed",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Seed for random numbers (affects sampling) - Note: only reproducible when running single threaded",
          "label": "seed",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "adaptive_rate",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Adaptive learning rate",
          "label": "adaptive_rate",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rho",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Adaptive learning rate time decay factor (similarity to prior updates)",
          "label": "rho",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "epsilon",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Adaptive learning rate smoothing factor (to avoid divisions by zero and allow progress)",
          "label": "epsilon",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rate",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Learning rate (higher => less stable, lower => slower convergence)",
          "label": "rate",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rate_annealing",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Learning rate annealing: rate / (1 + rate_annealing * samples)",
          "label": "rate_annealing",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rate_decay",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Learning rate decay factor between layers (N-th layer: rate*alpha^(N-1))",
          "label": "rate_decay",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "momentum_start",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Initial momentum at the beginning of training (try 0.5)",
          "label": "momentum_start",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "momentum_ramp",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of training samples for which momentum increases",
          "label": "momentum_ramp",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "momentum_stable",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Final momentum after the ramp is over (try 0.99)",
          "label": "momentum_stable",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nesterov_accelerated_gradient",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Use Nesterov accelerated gradient (recommended)",
          "label": "nesterov_accelerated_gradient",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "input_dropout_ratio",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Input layer dropout ratio (can improve generalization, try 0.1 or 0.2)",
          "label": "input_dropout_ratio",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "hidden_dropout_ratios",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Hidden layer dropout ratios (can improve generalization), specify one value per hidden layer, defaults to 0.5",
          "label": "hidden_dropout_ratios",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "l1",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "L1 regularization (can add stability and improve generalization, causes many weights to become 0)",
          "label": "l1",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "l2",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "L2 regularization (can add stability and improve generalization, causes many weights to be small",
          "label": "l2",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_w2",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Constraint for squared sum of incoming weights per unit (e.g. for Rectifier)",
          "label": "max_w2",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "initial_weight_distribution",
          "type": "enum",
          "is_schema": false,
          "schema_name": "InitialWeightDistribution",
          "value": null,
          "help": "Initial Weight Distribution",
          "label": "initial_weight_distribution",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [
            "UniformAdaptive",
            "Uniform",
            "Normal"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "initial_weight_scale",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Uniform: -value...value, Normal: stddev)",
          "label": "initial_weight_scale",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "loss",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Loss",
          "value": null,
          "help": "Loss function",
          "label": "loss",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [
            "Automatic",
            "CrossEntropy",
            "MeanSquare",
            "Huber",
            "Absolute"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "score_interval",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Shortest time interval (in secs) between model scoring",
          "label": "score_interval",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "score_training_samples",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of training set samples for scoring (0 for all)",
          "label": "score_training_samples",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "score_validation_samples",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of validation set samples for scoring (0 for all)",
          "label": "score_validation_samples",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "score_duty_cycle",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum duty cycle fraction for scoring (lower: more training, higher: more scoring).",
          "label": "score_duty_cycle",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "classification_stop",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Stopping criterion for classification error fraction on training data (-1 to disable)",
          "label": "classification_stop",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "regression_stop",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Stopping criterion for regression error (MSE) on training data (-1 to disable)",
          "label": "regression_stop",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "quiet_mode",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Enable quiet mode for less output to standard output",
          "label": "quiet_mode",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "score_validation_sampling",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ClassSamplingMethod",
          "value": null,
          "help": "Method used to sample validation dataset for scoring",
          "label": "score_validation_sampling",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [
            "Uniform",
            "Stratified"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "diagnostics",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Enable diagnostics for hidden layers",
          "label": "diagnostics",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "variable_importances",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Compute variable importances for input features (Gedeon method) - can be slow for large networks",
          "label": "variable_importances",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "fast_mode",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Enable fast mode (minor approximation in back-propagation)",
          "label": "fast_mode",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignore_const_cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Ignore constant training columns (no information can be gained anyway)",
          "label": "ignore_const_cols",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "force_load_balance",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Force extra load balancing to increase training speed for small datasets (to keep all cores busy)",
          "label": "force_load_balance",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "replicate_training_data",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Replicate the entire training dataset onto every node for faster training on small datasets",
          "label": "replicate_training_data",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "single_node_mode",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Run on a single node for fine-tuning of model parameters",
          "label": "single_node_mode",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "shuffle_training_data",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Enable shuffling of training data (recommended if training data is replicated and train_samples_per_iteration is close to #nodes x #rows)",
          "label": "shuffle_training_data",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "missing_values_handling",
          "type": "enum",
          "is_schema": false,
          "schema_name": "MissingValuesHandling",
          "value": null,
          "help": "Handling of missing values. Either Skip or MeanImputation.",
          "label": "missing_values_handling",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [
            "Skip",
            "MeanImputation"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sparse",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Sparse data handling (Experimental).",
          "label": "sparse",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "col_major",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Use a column major weight matrix for input layer. Can speed up forward propagation, but might slow down backpropagation (Experimental).",
          "label": "col_major",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "average_activation",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Average activation for sparse auto-encoder (Experimental)",
          "label": "average_activation",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sparsity_beta",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Sparsity regularization (Experimental)",
          "label": "sparsity_beta",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_categorical_features",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max. number of categorical features, enforced via hashing (Experimental)",
          "label": "max_categorical_features",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "reproducible",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Force reproducibility on small data (will be slow - only uses 1 thread)",
          "label": "reproducible",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "export_weights_and_biases",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Whether to export Neural Network weights and biases to H2O Frames",
          "label": "export_weights_and_biases",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "response_column",
          "type": "VecSpecifier",
          "is_schema": true,
          "schema_name": "ColSpecifierV2",
          "value": null,
          "help": "Response column",
          "label": "response_column",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": [
            "ignored_columns"
          ]
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "balance_classes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "label": "balance_classes",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "class_sampling_factors",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes.",
          "label": "class_sampling_factors",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_after_balance_size",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "label": "max_after_balance_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_confusion_matrix_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum size (# classes) for confusion matrices to be printed in the Logs",
          "label": "max_confusion_matrix_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_hit_ratio_k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable)",
          "label": "max_hit_ratio_k",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DeepLearningParametersV3",
            "schema_type": "DeepLearningParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DeepLearningParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkeep_cross_validation_splits | false | expert | boolean | false |  | false | Keep cross-validation Frames |  | [] | []\ncheckpoint | false | secondary | Key<Model> | true | ModelKeyV3 | (null) | Model checkpoint to resume training with |  | [] | []\noverride_with_best_model | false | expert | boolean | false |  | false | If enabled, override the final model with the best model found during training |  | [] | []\nautoencoder | false | secondary | boolean | false |  | false | Auto-Encoder |  | [] | []\nuse_all_factor_levels | false | secondary | boolean | false |  | false | Use all factor levels of categorical variables. Otherwise, the first factor level is omitted (without loss of accuracy). Useful for variable importances and auto-enabled for autoencoder. |  | [] | []\nactivation | false | critical | enum | false |  | (null) | Activation function | [Tanh, TanhWithDropout, Rectifier, RectifierWithDropout, Maxout, MaxoutWithDropout] | [] | []\nhidden | false | critical | int[] | false |  | (null) | Hidden layer sizes (e.g. 100,100). |  | [] | []\nepochs | false | critical | double | false |  | 0.0 | How many times the dataset should be iterated (streamed), can be fractional |  | [] | []\ntrain_samples_per_iteration | false | secondary | long | false |  | 0 | Number of training samples (globally) per MapReduce iteration. Special values are 0: one epoch, -1: all available data (e.g., replicated training data), -2: automatic |  | [] | []\ntarget_ratio_comm_to_comp | false | expert | double | false |  | 0.0 | Target ratio of communication overhead to computation. Only for multi-node operation and train_samples_per_iteration=-2 (auto-tuning) |  | [] | []\nseed | false | expert | long | false |  | 0 | Seed for random numbers (affects sampling) - Note: only reproducible when running single threaded |  | [] | []\nadaptive_rate | false | secondary | boolean | false |  | false | Adaptive learning rate |  | [] | []\nrho | false | expert | double | false |  | 0.0 | Adaptive learning rate time decay factor (similarity to prior updates) |  | [] | []\nepsilon | false | expert | double | false |  | 0.0 | Adaptive learning rate smoothing factor (to avoid divisions by zero and allow progress) |  | [] | []\nrate | false | expert | double | false |  | 0.0 | Learning rate (higher => less stable, lower => slower convergence) |  | [] | []\nrate_annealing | false | expert | double | false |  | 0.0 | Learning rate annealing: rate / (1 + rate_annealing * samples) |  | [] | []\nrate_decay | false | expert | double | false |  | 0.0 | Learning rate decay factor between layers (N-th layer: rate*alpha^(N-1)) |  | [] | []\nmomentum_start | false | expert | double | false |  | 0.0 | Initial momentum at the beginning of training (try 0.5) |  | [] | []\nmomentum_ramp | false | expert | double | false |  | 0.0 | Number of training samples for which momentum increases |  | [] | []\nmomentum_stable | false | expert | double | false |  | 0.0 | Final momentum after the ramp is over (try 0.99) |  | [] | []\nnesterov_accelerated_gradient | false | expert | boolean | false |  | false | Use Nesterov accelerated gradient (recommended) |  | [] | []\ninput_dropout_ratio | false | secondary | double | false |  | 0.0 | Input layer dropout ratio (can improve generalization, try 0.1 or 0.2) |  | [] | []\nhidden_dropout_ratios | false | secondary | double[] | false |  | (null) | Hidden layer dropout ratios (can improve generalization), specify one value per hidden layer, defaults to 0.5 |  | [] | []\nl1 | false | secondary | double | false |  | 0.0 | L1 regularization (can add stability and improve generalization, causes many weights to become 0) |  | [] | []\nl2 | false | secondary | double | false |  | 0.0 | L2 regularization (can add stability and improve generalization, causes many weights to be small |  | [] | []\nmax_w2 | false | expert | float | false |  | 0.0 | Constraint for squared sum of incoming weights per unit (e.g. for Rectifier) |  | [] | []\ninitial_weight_distribution | false | expert | enum | false |  | (null) | Initial Weight Distribution | [UniformAdaptive, Uniform, Normal] | [] | []\ninitial_weight_scale | false | expert | double | false |  | 0.0 | Uniform: -value...value, Normal: stddev) |  | [] | []\nloss | false | secondary | enum | false |  | (null) | Loss function | [Automatic, CrossEntropy, MeanSquare, Huber, Absolute] | [] | []\nscore_interval | false | secondary | double | false |  | 0.0 | Shortest time interval (in secs) between model scoring |  | [] | []\nscore_training_samples | false | secondary | long | false |  | 0 | Number of training set samples for scoring (0 for all) |  | [] | []\nscore_validation_samples | false | secondary | long | false |  | 0 | Number of validation set samples for scoring (0 for all) |  | [] | []\nscore_duty_cycle | false | secondary | double | false |  | 0.0 | Maximum duty cycle fraction for scoring (lower: more training, higher: more scoring). |  | [] | []\nclassification_stop | false | expert | double | false |  | 0.0 | Stopping criterion for classification error fraction on training data (-1 to disable) |  | [] | []\nregression_stop | false | expert | double | false |  | 0.0 | Stopping criterion for regression error (MSE) on training data (-1 to disable) |  | [] | []\nquiet_mode | false | expert | boolean | false |  | false | Enable quiet mode for less output to standard output |  | [] | []\nscore_validation_sampling | false | expert | enum | false |  | (null) | Method used to sample validation dataset for scoring | [Uniform, Stratified] | [] | []\ndiagnostics | false | expert | boolean | false |  | false | Enable diagnostics for hidden layers |  | [] | []\nvariable_importances | false | critical | boolean | false |  | false | Compute variable importances for input features (Gedeon method) - can be slow for large networks |  | [] | []\nfast_mode | false | expert | boolean | false |  | false | Enable fast mode (minor approximation in back-propagation) |  | [] | []\nignore_const_cols | false | expert | boolean | false |  | false | Ignore constant training columns (no information can be gained anyway) |  | [] | []\nforce_load_balance | false | expert | boolean | false |  | false | Force extra load balancing to increase training speed for small datasets (to keep all cores busy) |  | [] | []\nreplicate_training_data | false | secondary | boolean | false |  | false | Replicate the entire training dataset onto every node for faster training on small datasets |  | [] | []\nsingle_node_mode | false | expert | boolean | false |  | false | Run on a single node for fine-tuning of model parameters |  | [] | []\nshuffle_training_data | false | expert | boolean | false |  | false | Enable shuffling of training data (recommended if training data is replicated and train_samples_per_iteration is close to #nodes x #rows) |  | [] | []\nmissing_values_handling | false | expert | enum | false |  | (null) | Handling of missing values. Either Skip or MeanImputation. | [Skip, MeanImputation] | [] | []\nsparse | false | expert | boolean | false |  | false | Sparse data handling (Experimental). |  | [] | []\ncol_major | false | expert | boolean | false |  | false | Use a column major weight matrix for input layer. Can speed up forward propagation, but might slow down backpropagation (Experimental). |  | [] | []\naverage_activation | false | expert | double | false |  | 0.0 | Average activation for sparse auto-encoder (Experimental) |  | [] | []\nsparsity_beta | false | expert | double | false |  | 0.0 | Sparsity regularization (Experimental) |  | [] | []\nmax_categorical_features | false | expert | int | false |  | 0 | Max. number of categorical features, enforced via hashing (Experimental) |  | [] | []\nreproducible | false | expert | boolean | false |  | false | Force reproducibility on small data (will be slow - only uses 1 thread) |  | [] | []\nexport_weights_and_biases | false | expert | boolean | false |  | false | Whether to export Neural Network weights and biases to H2O Frames |  | [] | []\nresponse_column | false | critical | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | false | secondary | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | false | expert | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | false | expert | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | false | expert | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | false | expert | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkeep_cross_validation_splits | boolean | false |  | false | Keep cross-validation Frames |  | [] | []\ncheckpoint | Key<Model> | true | ModelKeyV3 | (null) | Model checkpoint to resume training with |  | [] | []\noverride_with_best_model | boolean | false |  | false | If enabled, override the final model with the best model found during training |  | [] | []\nautoencoder | boolean | false |  | false | Auto-Encoder |  | [] | []\nuse_all_factor_levels | boolean | false |  | false | Use all factor levels of categorical variables. Otherwise, the first factor level is omitted (without loss of accuracy). Useful for variable importances and auto-enabled for autoencoder. |  | [] | []\nactivation | enum | false |  | (null) | Activation function | [Tanh, TanhWithDropout, Rectifier, RectifierWithDropout, Maxout, MaxoutWithDropout] | [] | []\nhidden | int[] | false |  | (null) | Hidden layer sizes (e.g. 100,100). |  | [] | []\nepochs | double | false |  | 0.0 | How many times the dataset should be iterated (streamed), can be fractional |  | [] | []\ntrain_samples_per_iteration | long | false |  | 0 | Number of training samples (globally) per MapReduce iteration. Special values are 0: one epoch, -1: all available data (e.g., replicated training data), -2: automatic |  | [] | []\ntarget_ratio_comm_to_comp | double | false |  | 0.0 | Target ratio of communication overhead to computation. Only for multi-node operation and train_samples_per_iteration=-2 (auto-tuning) |  | [] | []\nseed | long | false |  | 0 | Seed for random numbers (affects sampling) - Note: only reproducible when running single threaded |  | [] | []\nadaptive_rate | boolean | false |  | false | Adaptive learning rate |  | [] | []\nrho | double | false |  | 0.0 | Adaptive learning rate time decay factor (similarity to prior updates) |  | [] | []\nepsilon | double | false |  | 0.0 | Adaptive learning rate smoothing factor (to avoid divisions by zero and allow progress) |  | [] | []\nrate | double | false |  | 0.0 | Learning rate (higher => less stable, lower => slower convergence) |  | [] | []\nrate_annealing | double | false |  | 0.0 | Learning rate annealing: rate / (1 + rate_annealing * samples) |  | [] | []\nrate_decay | double | false |  | 0.0 | Learning rate decay factor between layers (N-th layer: rate*alpha^(N-1)) |  | [] | []\nmomentum_start | double | false |  | 0.0 | Initial momentum at the beginning of training (try 0.5) |  | [] | []\nmomentum_ramp | double | false |  | 0.0 | Number of training samples for which momentum increases |  | [] | []\nmomentum_stable | double | false |  | 0.0 | Final momentum after the ramp is over (try 0.99) |  | [] | []\nnesterov_accelerated_gradient | boolean | false |  | false | Use Nesterov accelerated gradient (recommended) |  | [] | []\ninput_dropout_ratio | double | false |  | 0.0 | Input layer dropout ratio (can improve generalization, try 0.1 or 0.2) |  | [] | []\nhidden_dropout_ratios | double[] | false |  | (null) | Hidden layer dropout ratios (can improve generalization), specify one value per hidden layer, defaults to 0.5 |  | [] | []\nl1 | double | false |  | 0.0 | L1 regularization (can add stability and improve generalization, causes many weights to become 0) |  | [] | []\nl2 | double | false |  | 0.0 | L2 regularization (can add stability and improve generalization, causes many weights to be small |  | [] | []\nmax_w2 | float | false |  | 0.0 | Constraint for squared sum of incoming weights per unit (e.g. for Rectifier) |  | [] | []\ninitial_weight_distribution | enum | false |  | (null) | Initial Weight Distribution | [UniformAdaptive, Uniform, Normal] | [] | []\ninitial_weight_scale | double | false |  | 0.0 | Uniform: -value...value, Normal: stddev) |  | [] | []\nloss | enum | false |  | (null) | Loss function | [Automatic, CrossEntropy, MeanSquare, Huber, Absolute] | [] | []\nscore_interval | double | false |  | 0.0 | Shortest time interval (in secs) between model scoring |  | [] | []\nscore_training_samples | long | false |  | 0 | Number of training set samples for scoring (0 for all) |  | [] | []\nscore_validation_samples | long | false |  | 0 | Number of validation set samples for scoring (0 for all) |  | [] | []\nscore_duty_cycle | double | false |  | 0.0 | Maximum duty cycle fraction for scoring (lower: more training, higher: more scoring). |  | [] | []\nclassification_stop | double | false |  | 0.0 | Stopping criterion for classification error fraction on training data (-1 to disable) |  | [] | []\nregression_stop | double | false |  | 0.0 | Stopping criterion for regression error (MSE) on training data (-1 to disable) |  | [] | []\nquiet_mode | boolean | false |  | false | Enable quiet mode for less output to standard output |  | [] | []\nscore_validation_sampling | enum | false |  | (null) | Method used to sample validation dataset for scoring | [Uniform, Stratified] | [] | []\ndiagnostics | boolean | false |  | false | Enable diagnostics for hidden layers |  | [] | []\nvariable_importances | boolean | false |  | false | Compute variable importances for input features (Gedeon method) - can be slow for large networks |  | [] | []\nfast_mode | boolean | false |  | false | Enable fast mode (minor approximation in back-propagation) |  | [] | []\nignore_const_cols | boolean | false |  | false | Ignore constant training columns (no information can be gained anyway) |  | [] | []\nforce_load_balance | boolean | false |  | false | Force extra load balancing to increase training speed for small datasets (to keep all cores busy) |  | [] | []\nreplicate_training_data | boolean | false |  | false | Replicate the entire training dataset onto every node for faster training on small datasets |  | [] | []\nsingle_node_mode | boolean | false |  | false | Run on a single node for fine-tuning of model parameters |  | [] | []\nshuffle_training_data | boolean | false |  | false | Enable shuffling of training data (recommended if training data is replicated and train_samples_per_iteration is close to #nodes x #rows) |  | [] | []\nmissing_values_handling | enum | false |  | (null) | Handling of missing values. Either Skip or MeanImputation. | [Skip, MeanImputation] | [] | []\nsparse | boolean | false |  | false | Sparse data handling (Experimental). |  | [] | []\ncol_major | boolean | false |  | false | Use a column major weight matrix for input layer. Can speed up forward propagation, but might slow down backpropagation (Experimental). |  | [] | []\naverage_activation | double | false |  | 0.0 | Average activation for sparse auto-encoder (Experimental) |  | [] | []\nsparsity_beta | double | false |  | 0.0 | Sparsity regularization (Experimental) |  | [] | []\nmax_categorical_features | int | false |  | 0 | Max. number of categorical features, enforced via hashing (Experimental) |  | [] | []\nreproducible | boolean | false |  | false | Force reproducibility on small data (will be slow - only uses 1 thread) |  | [] | []\nexport_weights_and_biases | boolean | false |  | false | Whether to export Neural Network weights and biases to H2O Frames |  | [] | []\nresponse_column | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@30d7bea1 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "NodePersistentStorageV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "category",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Category name",
          "label": "category",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Key name",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "value",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Value",
          "label": "value",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "configured",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Configured",
          "label": "configured",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exists",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Exists",
          "label": "exists",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "entries",
          "type": "Iced[]",
          "is_schema": true,
          "schema_name": "NodePersistentStorageEntryV3",
          "value": null,
          "help": "List of entries",
          "label": "entries",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "NodePersistentStorageV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NodePersistentStorageV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ncategory | false | critical | string | false |  | (null) | Category name |  | [] | []\nname | false | critical | string | false |  | (null) | Key name |  | [] | []\nvalue | false | critical | string | false |  | (null) | Value |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ncategory | string | false |  | (null) | Category name |  | [] | []\nname | string | false |  | (null) | Key name |  | [] | []\nvalue | string | false |  | (null) | Value |  | [] | []\nconfigured | boolean | false |  | false | Configured |  | [] | []\nexists | boolean | false |  | false | Exists |  | [] | []\nentries | Iced[] | true | NodePersistentStorageEntryV3 | (null) | List of entries |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@24245514 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelMetricsRegressionV3",
      "superclass": "ModelMetricsBase",
      "type": "ModelMetricsRegression",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sigma",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Standard Deviation of the response for this scoring run.",
          "label": "sigma",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "The model used for this scoring run.",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the model used for this scoring run.",
          "label": "model_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "The frame used for this scoring run.",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the frame used for this scoring run.",
          "label": "frame_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Optional description for this scoring run (to note out-of-bag, sampled data, etc.)",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "The category (e.g., Clustering) for the model used for this scoring run.",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "duration_in_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The duration in mS for this scoring run.",
          "label": "duration_in_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The time in mS since the epoch for the start of this scoring run.",
          "label": "scoring_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "predictions",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Predictions Frame.",
          "label": "predictions",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelMetricsRegressionV3",
            "schema_type": "ModelMetricsRegression"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsRegressionV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | false | critical | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | false | critical | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nsigma | double | false |  | 0.0 | The Standard Deviation of the response for this scoring run. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\nmodel | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\ndescription | string | false |  | (null) | Optional description for this scoring run (to note out-of-bag, sampled data, etc.) |  | [] | []\nmodel_category | enum | false |  | (null) | The category (e.g., Clustering) for the model used for this scoring run. | [Unknown, Binomial, Multinomial, Regression, Clustering] | [] | []\nduration_in_ms | long | false |  | 0 | The duration in mS for this scoring run. |  | [] | []\nscoring_time | long | false |  | 0 | The time in mS since the epoch for the start of this scoring run. |  | [] | []\npredictions | Frame | true | FrameV3 | (null) | Predictions Frame. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4d4da695 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DocsV3",
      "superclass": "DocsBase",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "num",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number for specifying an endpoint",
          "label": "num",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "http_method",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "HTTP method (GET, POST, DELETE) if fetching by path",
          "label": "http_method",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "path",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Path for specifying an endpoint",
          "label": "path",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "classname",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Class name, for fetching docs for a schema (DEPRECATED)",
          "label": "classname",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "schemaname",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Schema name (e.g., DocsV1), for fetching docs for a schema",
          "label": "schemaname",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "routes",
          "type": "Route[]",
          "is_schema": true,
          "schema_name": "RouteV3",
          "value": null,
          "help": "List of endpoint routes",
          "label": "routes",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "schemas",
          "type": "SchemaMetadata[]",
          "is_schema": true,
          "schema_name": "SchemaMetadataV3",
          "value": null,
          "help": "List of schemas",
          "label": "schemas",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "markdown",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Table of Contents Markdown",
          "label": "markdown",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DocsV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DocsV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nnum | false | critical | int | false |  | 0 | Number for specifying an endpoint |  | [] | []\nhttp_method | false | critical | string | false |  | (null) | HTTP method (GET, POST, DELETE) if fetching by path |  | [] | []\npath | false | critical | string | false |  | (null) | Path for specifying an endpoint |  | [] | []\nclassname | false | critical | string | false |  | (null) | Class name, for fetching docs for a schema (DEPRECATED) |  | [] | []\nschemaname | false | critical | string | false |  | (null) | Schema name (e.g., DocsV1), for fetching docs for a schema |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nroutes | Route[] | true | RouteV3 | (null) | List of endpoint routes |  | [] | []\nschemas | SchemaMetadata[] | true | SchemaMetadataV3 | (null) | List of schemas |  | [] | []\nmarkdown | string | false |  | (null) | Table of Contents Markdown |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@24f3a7d9 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "TwoDimTableBase",
      "superclass": "Schema",
      "type": "TwoDimTable",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Table Name",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Table Description",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "columns",
          "type": "Iced[]",
          "is_schema": true,
          "schema_name": "ColumnSpecsBase",
          "value": null,
          "help": "Column Specification",
          "label": "columns",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rowcount",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of Rows",
          "label": "rowcount",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "data",
          "type": "IcedWrapper[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Table Data (col-major)",
          "label": "data",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "TwoDimTableBase",
            "schema_type": "TwoDimTable"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  TwoDimTableBase\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Table Name |  | [] | []\ndescription | string | false |  | (null) | Table Description |  | [] | []\ncolumns | Iced[] | true | ColumnSpecsBase | (null) | Column Specification |  | [] | []\nrowcount | int | false |  | 0 | Number of Rows |  | [] | []\ndata | IcedWrapper[][] | false |  | (null) | Table Data (col-major) |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7890aa82 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 2,
      "name": "QuantileParametersV2",
      "superclass": "ModelParametersSchema",
      "type": "QuantileParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "probs",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Probabilities for quantiles",
          "label": "probs",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 2,
            "schema_name": "QuantileParametersV2",
            "schema_type": "QuantileParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  QuantileParametersV2\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nprobs | false | critical | double[] | false |  | (null) | Probabilities for quantiles |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@61aa7aa4 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "LogAndEchoV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "message",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Message to be Logged and Echoed",
          "label": "message",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "LogAndEchoV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  LogAndEchoV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmessage | false | critical | string | false |  | (null) | Message to be Logged and Echoed |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7f59d713 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 2,
      "name": "ColSpecifierV2",
      "superclass": "Schema",
      "type": "VecSpecifier",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "column_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name of the column",
          "label": "column_name",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_member_of_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "List of fields which specify columns that must contain this column",
          "label": "is_member_of_frames",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 2,
            "schema_name": "ColSpecifierV2",
            "schema_type": "VecSpecifier"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ColSpecifierV2\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ncolumn_name | false | critical | string | false |  | (null) | Name of the column |  | [] | []\nis_member_of_frames | false | critical | string[] | false |  | (null) | List of fields which specify columns that must contain this column |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ncolumn_name | string | false |  | (null) | Name of the column |  | [] | []\nis_member_of_frames | string[] | false |  | (null) | List of fields which specify columns that must contain this column |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@633761b6 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelMetricsBinomialV3",
      "superclass": "ModelMetricsBase",
      "type": "ModelMetricsBinomial",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sigma",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The standard deviation of the training response.",
          "label": "sigma",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "logloss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The logarithmic loss for this scoring run.",
          "label": "logloss",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "AUC",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The AUC for this scoring run.",
          "label": "AUC",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "Gini",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Gini score for this run.",
          "label": "Gini",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "thresholds_and_metric_scores",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "The Metrics for various thresholds.",
          "label": "thresholds_and_metric_scores",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_criteria_and_metric_scores",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "The Metrics for various criteria.",
          "label": "max_criteria_and_metric_scores",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "The model used for this scoring run.",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the model used for this scoring run.",
          "label": "model_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "The frame used for this scoring run.",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the frame used for this scoring run.",
          "label": "frame_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Optional description for this scoring run (to note out-of-bag, sampled data, etc.)",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "The category (e.g., Clustering) for the model used for this scoring run.",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "duration_in_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The duration in mS for this scoring run.",
          "label": "duration_in_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The time in mS since the epoch for the start of this scoring run.",
          "label": "scoring_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "predictions",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Predictions Frame.",
          "label": "predictions",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelMetricsBinomialV3",
            "schema_type": "ModelMetricsBinomial"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsBinomialV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | false | critical | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | false | critical | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nsigma | double | false |  | 0.0 | The standard deviation of the training response. |  | [] | []\nlogloss | double | false |  | 0.0 | The logarithmic loss for this scoring run. |  | [] | []\nAUC | double | false |  | 0.0 | The AUC for this scoring run. |  | [] | []\nGini | double | false |  | 0.0 | The Gini score for this run. |  | [] | []\nthresholds_and_metric_scores | TwoDimTable | true | TwoDimTableV3 | (null) | The Metrics for various thresholds. |  | [] | []\nmax_criteria_and_metric_scores | TwoDimTable | true | TwoDimTableV3 | (null) | The Metrics for various criteria. |  | [] | []\nmodel | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\ndescription | string | false |  | (null) | Optional description for this scoring run (to note out-of-bag, sampled data, etc.) |  | [] | []\nmodel_category | enum | false |  | (null) | The category (e.g., Clustering) for the model used for this scoring run. | [Unknown, Binomial, Multinomial, Regression, Clustering] | [] | []\nduration_in_ms | long | false |  | 0 | The duration in mS for this scoring run. |  | [] | []\nscoring_time | long | false |  | 0 | The time in mS since the epoch for the start of this scoring run. |  | [] | []\npredictions | Frame | true | FrameV3 | (null) | Predictions Frame. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@48f0269d | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "LogsV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nodeidx",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Index of node to query ticks for (0-based).  -1 means current node.",
          "label": "nodeidx",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Which specific log file to read from the log file directory.  If left unspecified, the system chooses a default for you.",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "log",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Content of log file",
          "label": "log",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "LogsV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  LogsV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nnodeidx | true | critical | int | false |  | 0 | Index of node to query ticks for (0-based).  -1 means current node. |  | [] | []\nname | false | critical | string | false |  | (null) | Which specific log file to read from the log file directory.  If left unspecified, the system chooses a default for you. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nlog | string | false |  | (null) | Content of log file |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@33aa03b7 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ExampleModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "ExampleOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "iterations",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Iterations executed",
          "label": "iterations",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "maxs",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "maxs",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ExampleModelOutputV3",
            "schema_type": "ExampleOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ExampleModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\niterations | false | critical | int | false |  | 0 | Iterations executed |  | [] | []\nmaxs | false | critical | double[] | false |  | (null) |  |  | [] | []\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5ed9fde0 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "SupervisedModelBuilderSchema",
      "superclass": "ModelBuilderSchema",
      "type": "SupervisedModelBuilder",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Parameters",
          "is_schema": true,
          "schema_name": "ModelParametersSchema",
          "value": {
            "__meta": {
              "schema_version": -1,
              "schema_name": "SupervisedModelParametersSchema",
              "schema_type": "SupervisedParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "response_column": null,
            "balance_classes": false,
            "class_sampling_factors": null,
            "max_after_balance_size": 0,
            "max_confusion_matrix_size": 0,
            "max_hit_ratio_k": 0
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageBase",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "SupervisedModelBuilderSchema",
            "schema_type": "SupervisedModelBuilder"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SupervisedModelBuilderSchema\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | Parameters | true | ModelParametersSchema | water.api.SupervisedModelParametersSchema@39aaadc6 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageBase | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7476bfbd | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DeepLearningModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "DeepLearningModelOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "epoch_counter",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Epoch Counter",
          "label": "epoch_counter",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_samples",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Training Samples",
          "label": "training_samples",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_time_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Training Time (milliseconds)",
          "label": "training_time_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "autoencoder",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Whether the model is an autoencoder",
          "label": "autoencoder",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "weights",
          "type": "Key<Frame>[]",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Frame keys for weight matrices",
          "label": "weights",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "biases",
          "type": "Key<Frame>[]",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Frame keys for bias vectors",
          "label": "biases",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "variable_importances",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Variable Importances",
          "label": "variable_importances",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "run_time",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Training time (seconds)",
          "label": "run_time",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DeepLearningModelOutputV3",
            "schema_type": "DeepLearningModelOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DeepLearningModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nautoencoder | false | critical | boolean | false |  | false | Whether the model is an autoencoder |  | [] | []\nweights | false | critical | Key<Frame>[] | true | FrameKeyV3 | (null) | Frame keys for weight matrices |  | [] | []\nbiases | false | critical | Key<Frame>[] | true | FrameKeyV3 | (null) | Frame keys for bias vectors |  | [] | []\nrun_time | false | critical | double | false |  | 0.0 | Training time (seconds) |  | [] | []\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nepoch_counter | double | false |  | 0.0 | Epoch Counter |  | [] | []\ntraining_samples | long | false |  | 0 | Training Samples |  | [] | []\ntraining_time_ms | long | false |  | 0 | Training Time (milliseconds) |  | [] | []\nvariable_importances | TwoDimTable | true | TwoDimTableV3 | (null) | Variable Importances |  | [] | []\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@328b170e | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "QuantileV3",
      "superclass": "ModelBuilderSchema",
      "type": "Quantile",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "QuantileParameters",
          "is_schema": true,
          "schema_name": "QuantileParametersV2",
          "value": {
            "__meta": {
              "schema_version": 2,
              "schema_name": "QuantileParametersV2",
              "schema_type": "QuantileParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "probs": null
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "QuantileV3",
            "schema_type": "Quantile"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  QuantileV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | QuantileParameters | true | QuantileParametersV2 | hex.schemas.QuantileV3$QuantileParametersV2@4996b20e | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4483dae0 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelsV3",
      "superclass": "ModelsBase",
      "type": "Models",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Key of Model of interest",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "preview",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Return potentially abridged model suitable for viewing in a browser",
          "label": "preview",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "find_compatible_frames",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Find and return compatible frames?",
          "label": "find_compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "models",
          "type": "Model[]",
          "is_schema": true,
          "schema_name": "ModelSchema",
          "value": null,
          "help": "Models",
          "label": "models",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "Frame[]",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Compatible frames",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelsV3",
            "schema_type": "Models"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelsV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Key of Model of interest |  | [] | []\npreview | false | critical | boolean | false |  | false | Return potentially abridged model suitable for viewing in a browser |  | [] | []\nfind_compatible_frames | false | critical | boolean | false |  | false | Find and return compatible frames? |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmodels | Model[] | true | ModelSchema | (null) | Models |  | [] | []\ncompatible_frames | Frame[] | true | FrameV3 | (null) | Compatible frames |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@2c96cb44 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelMetricsClusteringV3",
      "superclass": "ModelMetricsBase",
      "type": "ModelMetricsClustering",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "size",
          "type": "long[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Cluster Size[k]",
          "label": "size",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "within_mse",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Within cluster Mean Square Error per cluster",
          "label": "within_mse",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "avg_within_ss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Average within cluster Mean Square Error",
          "label": "avg_within_ss",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "avg_ss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Average Mean Square Error to grand mean",
          "label": "avg_ss",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "avg_between_ss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Average between cluster Mean Square Error",
          "label": "avg_between_ss",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "The model used for this scoring run.",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the model used for this scoring run.",
          "label": "model_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "The frame used for this scoring run.",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the frame used for this scoring run.",
          "label": "frame_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Optional description for this scoring run (to note out-of-bag, sampled data, etc.)",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "The category (e.g., Clustering) for the model used for this scoring run.",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "duration_in_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The duration in mS for this scoring run.",
          "label": "duration_in_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The time in mS since the epoch for the start of this scoring run.",
          "label": "scoring_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "predictions",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Predictions Frame.",
          "label": "predictions",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelMetricsClusteringV3",
            "schema_type": "ModelMetricsClustering"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsClusteringV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nsize | false | critical | long[] | false |  | (null) | Cluster Size[k] |  | [] | []\nwithin_mse | false | critical | double[] | false |  | (null) | Within cluster Mean Square Error per cluster |  | [] | []\navg_within_ss | false | critical | double | false |  | 0.0 | Average within cluster Mean Square Error |  | [] | []\navg_ss | false | critical | double | false |  | 0.0 | Average Mean Square Error to grand mean |  | [] | []\navg_between_ss | false | critical | double | false |  | 0.0 | Average between cluster Mean Square Error |  | [] | []\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | false | critical | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | false | critical | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\ndescription | string | false |  | (null) | Optional description for this scoring run (to note out-of-bag, sampled data, etc.) |  | [] | []\nmodel_category | enum | false |  | (null) | The category (e.g., Clustering) for the model used for this scoring run. | [Unknown, Binomial, Multinomial, Regression, Clustering] | [] | []\nduration_in_ms | long | false |  | 0 | The duration in mS for this scoring run. |  | [] | []\nscoring_time | long | false |  | 0 | The time in mS since the epoch for the start of this scoring run. |  | [] | []\npredictions | Frame | true | FrameV3 | (null) | Predictions Frame. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5ffaf43a | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "FindV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Frame to search",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "column",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column, or null for all",
          "label": "column",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "row",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Starting row for search",
          "label": "row",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "match",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Value to search for; leave blank for a search for missing values",
          "label": "match",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "prev",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "previous row with matching value, or -1",
          "label": "prev",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "next",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "next row with matching value, or -1",
          "label": "next",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "FindV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  FindV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Frame | true | FrameV3 | (null) | Frame to search |  | [] | []\ncolumn | false | critical | string | false |  | (null) | Column, or null for all |  | [] | []\nrow | true | critical | long | false |  | 0 | Starting row for search |  | [] | []\nmatch | false | critical | string | false |  | (null) | Value to search for; leave blank for a search for missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nprev | long | false |  | 0 | previous row with matching value, or -1 |  | [] | []\nnext | long | false |  | 0 | next row with matching value, or -1 |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@54b83d10 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "TreeStatsV3",
      "superclass": "Schema",
      "type": "TreeStats",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "min_depth",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "minDepth",
          "label": "min_depth",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_depth",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "maxDepth",
          "label": "max_depth",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mean_depth",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "meanDepth",
          "label": "mean_depth",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "min_leaves",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "minLeaves",
          "label": "min_leaves",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_leaves",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "maxLeaves",
          "label": "max_leaves",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mean_leaves",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "meanLeaves",
          "label": "mean_leaves",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "TreeStatsV3",
            "schema_type": "TreeStats"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  TreeStatsV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmin_depth | false | critical | int | false |  | 0 | minDepth |  | [] | []\nmax_depth | false | critical | int | false |  | 0 | maxDepth |  | [] | []\nmean_depth | false | critical | float | false |  | 0.0 | meanDepth |  | [] | []\nmin_leaves | false | critical | int | false |  | 0 | minLeaves |  | [] | []\nmax_leaves | false | critical | int | false |  | 0 | maxLeaves |  | [] | []\nmean_leaves | false | critical | float | false |  | 0.0 | meanLeaves |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@bb110e4 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "RemoveV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Keyed>",
          "is_schema": true,
          "schema_name": "KeyV3",
          "value": null,
          "help": "Key to be removed.",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "RemoveV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  RemoveV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | false | critical | Key<Keyed> | true | KeyV3 | (null) | Key to be removed. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@15cbeebb | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GLMModelV3",
      "superclass": "ModelSchema",
      "type": "GLMModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "GLMParameters",
          "is_schema": true,
          "schema_name": "GLMParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "GLMOutput",
          "is_schema": true,
          "schema_name": "GLMModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GLMModelV3",
            "schema_type": "GLMModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GLMModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | GLMParameters | true | GLMParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | GLMOutput | true | GLMModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7fa6422a | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "RouteV3",
      "superclass": "RouteBase",
      "type": "Route",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "http_method",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "http_method",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "url_pattern",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "url_pattern",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "summary",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "summary",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "handler_class",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "handler_class",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "handler_method",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "handler_method",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "input_schema",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "input_schema",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output_schema",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "output_schema",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "doc_method",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "doc_method",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "path_params",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "path_params",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "markdown",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "markdown",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "RouteV3",
            "schema_type": "Route"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  RouteV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nhttp_method | string | false |  | (null) |  |  | [] | []\nurl_pattern | string | false |  | (null) |  |  | [] | []\nsummary | string | false |  | (null) |  |  | [] | []\nhandler_class | string | false |  | (null) |  |  | [] | []\nhandler_method | string | false |  | (null) |  |  | [] | []\ninput_schema | string | false |  | (null) |  |  | [] | []\noutput_schema | string | false |  | (null) |  |  | [] | []\ndoc_method | string | false |  | (null) |  |  | [] | []\npath_params | string[] | false |  | (null) |  |  | [] | []\nmarkdown | string | false |  | (null) |  |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7c4214de | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "NaiveBayesModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "NaiveBayesOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "levels",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Categorical levels of the response",
          "label": "levels",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "apriori",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "A-priori probabilities of the response",
          "label": "apriori",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "pcond",
          "type": "TwoDimTable[]",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Conditional probabilities of the predictors",
          "label": "pcond",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "NaiveBayesModelOutputV3",
            "schema_type": "NaiveBayesOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NaiveBayesModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nlevels | false | critical | string[] | false |  | (null) | Categorical levels of the response |  | [] | []\napriori | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | A-priori probabilities of the response |  | [] | []\npcond | false | critical | TwoDimTable[] | true | TwoDimTableV3 | (null) | Conditional probabilities of the predictors |  | [] | []\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@56683a8d | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelParameterSchemaV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "name in the JSON, e.g. \"lambda\"",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "label",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "label in the UI, e.g. \"lambda\"",
          "label": "label",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "help for the UI, e.g. \"regularization multiplier, typically used for foo bar baz etc.\"",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "required",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "the field is required",
          "label": "required",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Java type, e.g. \"double\"",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "default_value",
          "type": "Polymorphic",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "default value, e.g. 1",
          "label": "default_value",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "actual_value",
          "type": "Polymorphic",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "actual value as set by the user and / or modified by the ModelBuilder, e.g., 10",
          "label": "actual_value",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "level",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "the importance of the parameter, used by the UI, e.g. \"critical\", \"extended\" or \"expert\"",
          "label": "level",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "values",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "list of valid values for use by the front-end",
          "label": "values",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_member_of_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "For Vec-type fields this is the set of other Vec-type fields which must contain mutually exclusive values; for example, for a SupervisedModel the response_column must be mutually exclusive with the weights_column",
          "label": "is_member_of_frames",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_mutually_exclusive_with",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "For Vec-type fields this is the set of Frame-type fields which must contain the named column; for example, for a SupervisedModel the response_column must be in both the training_frame and (if it's set) the validation_frame",
          "label": "is_mutually_exclusive_with",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelParameterSchemaV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelParameterSchemaV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nis_member_of_frames | false | critical | string[] | false |  | (null) | For Vec-type fields this is the set of other Vec-type fields which must contain mutually exclusive values; for example, for a SupervisedModel the response_column must be mutually exclusive with the weights_column |  | [] | []\nis_mutually_exclusive_with | false | critical | string[] | false |  | (null) | For Vec-type fields this is the set of Frame-type fields which must contain the named column; for example, for a SupervisedModel the response_column must be in both the training_frame and (if it's set) the validation_frame |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | name in the JSON, e.g. \"lambda\" |  | [] | []\nlabel | string | false |  | (null) | label in the UI, e.g. \"lambda\" |  | [] | []\nhelp | string | false |  | (null) | help for the UI, e.g. \"regularization multiplier, typically used for foo bar baz etc.\" |  | [] | []\nrequired | boolean | false |  | false | the field is required |  | [] | []\ntype | string | false |  | (null) | Java type, e.g. \"double\" |  | [] | []\ndefault_value | Polymorphic | false |  | (null) | default value, e.g. 1 |  | [] | []\nactual_value | Polymorphic | false |  | (null) | actual value as set by the user and / or modified by the ModelBuilder, e.g., 10 |  | [] | []\nlevel | string | false |  | (null) | the importance of the parameter, used by the UI, e.g. \"critical\", \"extended\" or \"expert\" |  | [] | []\nvalues | string[] | false |  | (null) | list of valid values for use by the front-end |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@54dc2b4c | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GBMModelOutputV3",
      "superclass": "SharedTreeModelOutputV3",
      "type": "GBMOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "variable_importances",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Variable Importances",
          "label": "variable_importances",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GBMModelOutputV3",
            "schema_type": "GBMOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GBMModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nvariable_importances | TwoDimTable | true | TwoDimTableV3 | (null) | Variable Importances |  | [] | []\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@429eb61a | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DRFModelV3",
      "superclass": "SharedTreeModelV3",
      "type": "DRFModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "DRFParameters",
          "is_schema": true,
          "schema_name": "DRFParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "DRFOutput",
          "is_schema": true,
          "schema_name": "DRFModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DRFModelV3",
            "schema_type": "DRFModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DRFModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | DRFParameters | true | DRFParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | DRFOutput | true | DRFModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@41c58721 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ModelParametersSchema",
      "superclass": "Schema",
      "type": "Parameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ModelParametersSchema",
            "schema_type": "Parameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelParametersSchema\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@f2aa943 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "MakeGLMModelV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "source model",
          "label": "model",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dest",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "ModelKeyV3",
              "schema_type": "Key<Model>"
            },
            "name": "_8a4291a1dd1042dfe8f0569f3bc84afb",
            "type": "Key<Model>",
            "URL": "/3/Models/_8a4291a1dd1042dfe8f0569f3bc84afb"
          },
          "help": "destination key",
          "label": "dest",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "coefficient names",
          "label": "names",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "beta",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "new glm coefficients",
          "label": "beta",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "threshold",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0.5,
          "help": "decision threshold for label-generation",
          "label": "threshold",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "MakeGLMModelV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  MakeGLMModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | true | critical | Key<Model> | true | ModelKeyV3 | (null) | source model |  | [] | []\ndest | false | critical | Key<Model> | true | ModelKeyV3 | Key<Model> _8a4291a1dd1042dfe8f0569f3bc84afb | destination key |  | [] | []\nnames | true | critical | string[] | false |  | (null) | coefficient names |  | [] | []\nbeta | true | critical | double[] | false |  | (null) | new glm coefficients |  | [] | []\nthreshold | false | critical | float | false |  | 0.5 | decision threshold for label-generation |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@39ce757c | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 2,
      "name": "DStackTraceV2",
      "superclass": "Schema",
      "type": "DStackTrace",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "node",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Node name",
          "label": "node",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Unix epoch time",
          "label": "time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "thread_traces",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "One trace per thread",
          "label": "thread_traces",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 2,
            "schema_name": "DStackTraceV2",
            "schema_type": "DStackTrace"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DStackTraceV2\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnode | string | false |  | (null) | Node name |  | [] | []\ntime | long | false |  | 0 | Unix epoch time |  | [] | []\nthread_traces | string[] | false |  | (null) | One trace per thread |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@21833d8a | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "CreateFrameV3",
      "superclass": "JobV3",
      "type": "CreateFrame",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rows",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of rows",
          "label": "rows",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cols",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of data columns (in addition to the first response column)",
          "label": "cols",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "seed",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Random number seed",
          "label": "seed",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "randomize",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Whether frame should be randomized",
          "label": "randomize",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "value",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Constant value (for randomize=false)",
          "label": "value",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "real_range",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Range for real variables (-range ... range)",
          "label": "real_range",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "categorical_fraction",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fraction of categorical columns (for randomize=true)",
          "label": "categorical_fraction",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "factors",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Factor levels for categorical variables",
          "label": "factors",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "integer_fraction",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fraction of integer columns (for randomize=true)",
          "label": "integer_fraction",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "integer_range",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Range for integer variables (-range ... range)",
          "label": "integer_range",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "binary_fraction",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fraction of binary columns (for randomize=true)",
          "label": "binary_fraction",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "binary_ones_fraction",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fraction of 1's in binary columns",
          "label": "binary_ones_fraction",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "missing_fraction",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fraction of missing values",
          "label": "missing_fraction",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "response_factors",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of factor levels of the first column (1=real, 2=binomial, N=multinomial)",
          "label": "response_factors",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "has_response",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Whether an additional response column should be generated",
          "label": "has_response",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Job>",
          "is_schema": true,
          "schema_name": "JobKeyV3",
          "value": null,
          "help": "Job Key",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Job description",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "status",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "job status",
          "label": "status",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "progress",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "progress, from 0 to 1",
          "label": "progress",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "progress_msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "current progress status description",
          "label": "progress_msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "start_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Start time",
          "label": "start_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "msec",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "runtime",
          "label": "msec",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dest",
          "type": "Key<Keyed>",
          "is_schema": true,
          "schema_name": "KeyV3",
          "value": null,
          "help": "destination key",
          "label": "dest",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exception",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "exception",
          "label": "exception",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "CreateFrameV3",
            "schema_type": "CreateFrame"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  CreateFrameV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nrows | false | critical | long | false |  | 0 | Number of rows |  | [] | []\ncols | false | critical | int | false |  | 0 | Number of data columns (in addition to the first response column) |  | [] | []\nseed | false | critical | long | false |  | 0 | Random number seed |  | [] | []\nrandomize | false | critical | boolean | false |  | false | Whether frame should be randomized |  | [] | []\nvalue | false | critical | long | false |  | 0 | Constant value (for randomize=false) |  | [] | []\nreal_range | false | critical | long | false |  | 0 | Range for real variables (-range ... range) |  | [] | []\ncategorical_fraction | false | critical | double | false |  | 0.0 | Fraction of categorical columns (for randomize=true) |  | [] | []\nfactors | false | critical | int | false |  | 0 | Factor levels for categorical variables |  | [] | []\ninteger_fraction | false | critical | double | false |  | 0.0 | Fraction of integer columns (for randomize=true) |  | [] | []\ninteger_range | false | critical | long | false |  | 0 | Range for integer variables (-range ... range) |  | [] | []\nbinary_fraction | false | critical | double | false |  | 0.0 | Fraction of binary columns (for randomize=true) |  | [] | []\nbinary_ones_fraction | false | critical | double | false |  | 0.0 | Fraction of 1's in binary columns |  | [] | []\nmissing_fraction | false | critical | double | false |  | 0.0 | Fraction of missing values |  | [] | []\nresponse_factors | false | critical | int | false |  | 0 | Number of factor levels of the first column (1=real, 2=binomial, N=multinomial) |  | [] | []\nhas_response | false | critical | boolean | false |  | false | Whether an additional response column should be generated |  | [] | []\nkey | false | critical | Key<Job> | true | JobKeyV3 | (null) | Job Key |  | [] | []\ndescription | false | critical | string | false |  | (null) | Job description |  | [] | []\ndest | false | critical | Key<Keyed> | true | KeyV3 | (null) | destination key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nstatus | string | false |  | (null) | job status |  | [] | []\nprogress | float | false |  | 0.0 | progress, from 0 to 1 |  | [] | []\nprogress_msg | string | false |  | (null) | current progress status description |  | [] | []\nstart_time | long | false |  | 0 | Start time |  | [] | []\nmsec | long | false |  | 0 | runtime |  | [] | []\ndest | Key<Keyed> | true | KeyV3 | (null) | destination key |  | [] | []\nexception | string | false |  | (null) | exception |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@2f3d4036 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "TypeaheadV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "src",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "training_frame",
          "label": "src",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "limit",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "limit",
          "label": "limit",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "matches",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "matches",
          "label": "matches",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "TypeaheadV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  TypeaheadV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nsrc | true | critical | string | false |  | (null) | training_frame |  | [] | []\nlimit | false | critical | int | false |  | 0 | limit |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmatches | string[] | false |  | (null) | matches |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5e42b174 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ModelBuildersBase",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Algo of ModelBuilder of interest",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_builders",
          "type": "Map<String,ModelBuilderSchema>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "ModelBuilders",
          "label": "model_builders",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ModelBuildersBase",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelBuildersBase\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | false | critical | string | false |  | (null) | Algo of ModelBuilder of interest |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel_builders | Map<String,ModelBuilderSchema> | false |  | (null) | ModelBuilders |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@6c906704 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "KMeansModelV3",
      "superclass": "ModelSchema",
      "type": "KMeansModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "KMeansParameters",
          "is_schema": true,
          "schema_name": "KMeansParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "KMeansOutput",
          "is_schema": true,
          "schema_name": "KMeansModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "KMeansModelV3",
            "schema_type": "KMeansModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  KMeansModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | KMeansParameters | true | KMeansParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | KMeansOutput | true | KMeansModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7c5b6f4a | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "FieldMetadataBase",
      "superclass": "Schema",
      "type": "FieldMetadata",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Field name in the Schema",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Type for this field",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_schema",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Type for this field is itself a Schema.",
          "label": "is_schema",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "schema_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Schema name for this field, if it is_schema, or the name of the enum, if it's an enum.",
          "label": "schema_name",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "value",
          "type": "Polymorphic",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Value for this field",
          "label": "value",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "A short help description to appear alongside the field in a UI",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "label",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The label that should be displayed for the field if the name is insufficient",
          "label": "label",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "required",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Is this field required, or is the default value generally sufficient?",
          "label": "required",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "level",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Level",
          "value": null,
          "help": "How important is this field?  The web UI uses the level to do a slow reveal of the parameters",
          "label": "level",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "critical",
            "secondary",
            "expert"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "direction",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Direction",
          "value": null,
          "help": "Is this field an input, output or inout?",
          "label": "direction",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "INPUT",
            "OUTPUT",
            "INOUT"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "values",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "For enum-type fields the allowed values are specified using the values annotation;  this is used in UIs to tell the user the allowed values, and for validation",
          "label": "values",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "json",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Should this field be rendered in the JSON representation?",
          "label": "json",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_member_of_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "For Vec-type fields this is the set of other Vec-type fields which must contain mutually exclusive values; for example, for a SupervisedModel the response_column must be mutually exclusive with the weights_column",
          "label": "is_member_of_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_mutually_exclusive_with",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "For Vec-type fields this is the set of Frame-type fields which must contain the named column; for example, for a SupervisedModel the response_column must be in both the training_frame and (if it's set) the validation_frame",
          "label": "is_mutually_exclusive_with",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "FieldMetadataBase",
            "schema_type": "FieldMetadata"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  FieldMetadataBase\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nschema_name | false | critical | string | false |  | (null) | Schema name for this field, if it is_schema, or the name of the enum, if it's an enum. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Field name in the Schema |  | [] | []\ntype | string | false |  | (null) | Type for this field |  | [] | []\nis_schema | boolean | false |  | false | Type for this field is itself a Schema. |  | [] | []\nvalue | Polymorphic | false |  | (null) | Value for this field |  | [] | []\nhelp | string | false |  | (null) | A short help description to appear alongside the field in a UI |  | [] | []\nlabel | string | false |  | (null) | The label that should be displayed for the field if the name is insufficient |  | [] | []\nrequired | boolean | false |  | false | Is this field required, or is the default value generally sufficient? |  | [] | []\nlevel | enum | false |  | (null) | How important is this field?  The web UI uses the level to do a slow reveal of the parameters | [critical, secondary, expert] | [] | []\ndirection | enum | false |  | (null) | Is this field an input, output or inout? | [INPUT, OUTPUT, INOUT] | [] | []\nvalues | string[] | false |  | (null) | For enum-type fields the allowed values are specified using the values annotation;  this is used in UIs to tell the user the allowed values, and for validation |  | [] | []\njson | boolean | false |  | false | Should this field be rendered in the JSON representation? |  | [] | []\nis_member_of_frames | string[] | false |  | (null) | For Vec-type fields this is the set of other Vec-type fields which must contain mutually exclusive values; for example, for a SupervisedModel the response_column must be mutually exclusive with the weights_column |  | [] | []\nis_mutually_exclusive_with | string[] | false |  | (null) | For Vec-type fields this is the set of Frame-type fields which must contain the named column; for example, for a SupervisedModel the response_column must be in both the training_frame and (if it's set) the validation_frame |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@56e7a30e | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ModelBuilderSchema",
      "superclass": "Schema",
      "type": "ModelBuilder",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Parameters",
          "is_schema": true,
          "schema_name": "ModelParametersSchema",
          "value": {
            "__meta": {
              "schema_version": -1,
              "schema_name": "ModelParametersSchema",
              "schema_type": "Parameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageBase",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ModelBuilderSchema",
            "schema_type": "ModelBuilder"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelBuilderSchema\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | Parameters | true | ModelParametersSchema | water.api.ModelParametersSchema@18218b5 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageBase | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@42413d9 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "CoxPHV3",
      "superclass": "ModelBuilderSchema",
      "type": "CoxPH",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "CoxPHParameters",
          "is_schema": true,
          "schema_name": "CoxPHParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "CoxPHParametersV3",
              "schema_type": "CoxPHParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "CoxPHV3",
            "schema_type": "CoxPH"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  CoxPHV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | CoxPHParameters | true | CoxPHParametersV3 | hex.schemas.CoxPHV3$CoxPHParametersV3@5c930dae | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@3a6749fd | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "KeyV3",
      "superclass": "Schema",
      "type": "Key<Keyed>",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for this Key.",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for the type of Keyed this Key points to.",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "URL",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "URL for the resource that this Key points to, if one exists.",
          "label": "URL",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "KeyV3",
            "schema_type": "Key<Keyed>"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  KeyV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nname | false | critical | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | false | critical | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | false | critical | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@532a9eff | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelKeyV3",
      "superclass": "KeyV3",
      "type": "Key<Model>",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for this Key.",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for the type of Keyed this Key points to.",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "URL",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "URL for the resource that this Key points to, if one exists.",
          "label": "URL",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelKeyV3",
            "schema_type": "Key<Model>"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelKeyV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nname | false | critical | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | false | critical | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | false | critical | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@132ca201 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "Schema",
      "superclass": "Iced",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "Schema",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  Schema\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@573ff97c | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DRFParametersV3",
      "superclass": "SharedTreeParametersV3",
      "type": "DRFParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mtries",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of columns to randomly select at each level, or -1 for sqrt(#cols)",
          "label": "mtries",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sample_rate",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Sample rate, from 0. to 1.0",
          "label": "sample_rate",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "build_tree_one_node",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Run on one node only; no network overhead but fewer cpus used.  Suitable for small datasets.",
          "label": "build_tree_one_node",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ntrees",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of trees.",
          "label": "ntrees",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_depth",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum tree depth.",
          "label": "max_depth",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "min_rows",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fewest allowed observations in a leaf (in R called 'nodesize').",
          "label": "min_rows",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nbins",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Build a histogram of this many bins, then split at the best point",
          "label": "nbins",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "seed",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Seed for pseudo random number generator (if applicable)",
          "label": "seed",
          "required": false,
          "level": "expert",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "treeStats",
          "type": "TreeStats",
          "is_schema": true,
          "schema_name": "TreeStatsV3",
          "value": null,
          "help": "More in-depth tree stats",
          "label": "treeStats",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "r2",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "r2 metric on validation set: 1-(MSE(model)/variance(response))",
          "label": "r2",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse_train",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Training set error per-tree (scored).",
          "label": "mse_train",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse_valid",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Validation set error per-tree (scored).",
          "label": "mse_valid",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "varimp",
          "type": "VarImp",
          "is_schema": true,
          "schema_name": "VarImpV3",
          "value": null,
          "help": "Variable Importance",
          "label": "varimp",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "response_column",
          "type": "VecSpecifier",
          "is_schema": true,
          "schema_name": "ColSpecifierV2",
          "value": null,
          "help": "Response column",
          "label": "response_column",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": [
            "ignored_columns"
          ]
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "balance_classes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "label": "balance_classes",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "class_sampling_factors",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes.",
          "label": "class_sampling_factors",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_after_balance_size",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "label": "max_after_balance_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_confusion_matrix_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum size (# classes) for confusion matrices to be printed in the Logs",
          "label": "max_confusion_matrix_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_hit_ratio_k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable)",
          "label": "max_hit_ratio_k",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DRFParametersV3",
            "schema_type": "DRFParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DRFParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmtries | false | critical | int | false |  | 0 | Number of columns to randomly select at each level, or -1 for sqrt(#cols) |  | [] | []\nsample_rate | false | critical | float | false |  | 0.0 | Sample rate, from 0. to 1.0 |  | [] | []\nbuild_tree_one_node | false | critical | boolean | false |  | false | Run on one node only; no network overhead but fewer cpus used.  Suitable for small datasets. |  | [] | []\nntrees | false | critical | int | false |  | 0 | Number of trees. |  | [] | []\nmax_depth | false | critical | int | false |  | 0 | Maximum tree depth. |  | [] | []\nmin_rows | false | critical | int | false |  | 0 | Fewest allowed observations in a leaf (in R called 'nodesize'). |  | [] | []\nnbins | false | critical | int | false |  | 0 | Build a histogram of this many bins, then split at the best point |  | [] | []\nseed | false | expert | long | false |  | 0 | Seed for pseudo random number generator (if applicable) |  | [] | []\nresponse_column | false | critical | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | false | secondary | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | false | expert | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | false | expert | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | false | expert | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | false | expert | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ntreeStats | TreeStats | true | TreeStatsV3 | (null) | More in-depth tree stats |  | [] | []\nr2 | double | false |  | 0.0 | r2 metric on validation set: 1-(MSE(model)/variance(response)) |  | [] | []\nmse_train | double[] | false |  | (null) | Training set error per-tree (scored). |  | [] | []\nmse_valid | double[] | false |  | (null) | Validation set error per-tree (scored). |  | [] | []\nvarimp | VarImp | true | VarImpV3 | (null) | Variable Importance |  | [] | []\nresponse_column | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7ae1fc0d | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ParseSetupV3",
      "superclass": "Schema",
      "type": "ParseSetup",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "source_keys",
          "type": "Key<Frame>[]",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Source keys",
          "label": "source_keys",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parse_type",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ParserType",
          "value": "AUTO",
          "help": "Parser type",
          "label": "parse_type",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [
            "AUTO",
            "ARFF",
            "XLS",
            "XLSX",
            "CSV",
            "SVMLight"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "separator",
          "type": "byte",
          "is_schema": false,
          "schema_name": null,
          "value": -1,
          "help": "Field separator",
          "label": "separator",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "single_quotes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Single quotes",
          "label": "single_quotes",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "check_header",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Check header: 0 means guess, +1 means 1st line is header not data, -1 means 1st line is data not header",
          "label": "check_header",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "column_names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names",
          "label": "column_names",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "column_types",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Value types for columns",
          "label": "column_types",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "na_strings",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "NA strings for columns",
          "label": "na_strings",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Suggested name",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_valid",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "The initial parse is sane",
          "label": "is_valid",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "invalid_lines",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of broken/invalid lines found",
          "label": "invalid_lines",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "header_lines",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of header lines found",
          "label": "header_lines",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "number_columns",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": -1,
          "help": "Number of columns",
          "label": "number_columns",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical columns",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "data",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Sample data",
          "label": "data",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "chunk_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 4194304,
          "help": "Size of individual parse tasks",
          "label": "chunk_size",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ParseSetupV3",
            "schema_type": "ParseSetup"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ParseSetupV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nsource_keys | true | critical | Key<Frame>[] | true | FrameKeyV3 | (null) | Source keys |  | [] | []\nparse_type | false | critical | enum | false |  | AUTO | Parser type | [AUTO, ARFF, XLS, XLSX, CSV, SVMLight] | [] | []\nseparator | false | critical | byte | false |  | -1 | Field separator |  | [] | []\nsingle_quotes | false | critical | boolean | false |  | false | Single quotes |  | [] | []\ncheck_header | false | critical | int | false |  | 0 | Check header: 0 means guess, +1 means 1st line is header not data, -1 means 1st line is data not header |  | [] | []\ncolumn_names | false | critical | string[] | false |  | (null) | Column names |  | [] | []\ncolumn_types | false | critical | string[] | false |  | (null) | Value types for columns |  | [] | []\nna_strings | false | critical | string[] | false |  | (null) | NA strings for columns |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nsource_keys | Key<Frame>[] | true | FrameKeyV3 | (null) | Source keys |  | [] | []\nparse_type | enum | false |  | AUTO | Parser type | [AUTO, ARFF, XLS, XLSX, CSV, SVMLight] | [] | []\nseparator | byte | false |  | -1 | Field separator |  | [] | []\nsingle_quotes | boolean | false |  | false | Single quotes |  | [] | []\ncheck_header | int | false |  | 0 | Check header: 0 means guess, +1 means 1st line is header not data, -1 means 1st line is data not header |  | [] | []\ncolumn_names | string[] | false |  | (null) | Column names |  | [] | []\ncolumn_types | string[] | false |  | (null) | Value types for columns |  | [] | []\nna_strings | string[] | false |  | (null) | NA strings for columns |  | [] | []\ndestination_key | string | false |  | (null) | Suggested name |  | [] | []\nis_valid | boolean | false |  | false | The initial parse is sane |  | [] | []\ninvalid_lines | long | false |  | 0 | Number of broken/invalid lines found |  | [] | []\nheader_lines | long | false |  | 0 | Number of header lines found |  | [] | []\nnumber_columns | int | false |  | -1 | Number of columns |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical columns |  | [] | []\ndata | string[][] | false |  | (null) | Sample data |  | [] | []\nchunk_size | int | false |  | 4194304 | Size of individual parse tasks |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@a6af882 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "RapidsV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ast",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "An Abstract Syntax Tree.",
          "label": "ast",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "fun",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "An array of function definitions.",
          "label": "fun",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ast_key",
          "type": "Key<Keyed>",
          "is_schema": true,
          "schema_name": "KeyV3",
          "value": null,
          "help": "A pointer to a Frame",
          "label": "ast_key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "error",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Parsing error, if any",
          "label": "error",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Result key",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "num_rows",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Rows in Frame result",
          "label": "num_rows",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "num_cols",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Columns in Frame result",
          "label": "num_cols",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scalar",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Scalar result",
          "label": "scalar",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "funstr",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Function result",
          "label": "funstr",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "col_names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column Names",
          "label": "col_names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "string",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "String result",
          "label": "string",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "result",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "result",
          "label": "result",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "evaluated",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Was evaluated",
          "label": "evaluated",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "head",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Head of a Frame result",
          "label": "head",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "result_type",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Result Type.",
          "label": "result_type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "vec_keys",
          "type": "Key<Vec>[]",
          "is_schema": true,
          "schema_name": "VecKeyV3",
          "value": null,
          "help": "Vec keys for key result",
          "label": "vec_keys",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "RapidsV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  RapidsV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nast | false | critical | string | false |  | (null) | An Abstract Syntax Tree. |  | [] | []\nfun | false | critical | string | false |  | (null) | An array of function definitions. |  | [] | []\nast_key | false | critical | Key<Keyed> | true | KeyV3 | (null) | A pointer to a Frame |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nerror | string | false |  | (null) | Parsing error, if any |  | [] | []\nkey | Key<Frame> | true | FrameKeyV3 | (null) | Result key |  | [] | []\nnum_rows | long | false |  | 0 | Rows in Frame result |  | [] | []\nnum_cols | int | false |  | 0 | Columns in Frame result |  | [] | []\nscalar | double | false |  | 0.0 | Scalar result |  | [] | []\nfunstr | string | false |  | (null) | Function result |  | [] | []\ncol_names | string[] | false |  | (null) | Column Names |  | [] | []\nstring | string | false |  | (null) | String result |  | [] | []\nresult | string | false |  | (null) | result |  | [] | []\nevaluated | boolean | false |  | false | Was evaluated |  | [] | []\nhead | string[][] | false |  | (null) | Head of a Frame result |  | [] | []\nresult_type | int | false |  | 0 | Result Type. |  | [] | []\nvec_keys | Key<Vec>[] | true | VecKeyV3 | (null) | Vec keys for key result |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@74e12425 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "KMeansParametersV3",
      "superclass": "ClusteringModelParametersSchema",
      "type": "KMeansParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "user_points",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "User-specified points",
          "label": "user_points",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_iterations",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum training iterations",
          "label": "max_iterations",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "standardize",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": true,
          "help": "Standardize columns",
          "label": "standardize",
          "required": false,
          "level": "secondary",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "seed",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "RNG Seed",
          "label": "seed",
          "required": false,
          "level": "expert",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "init",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Initialization",
          "value": null,
          "help": "Initialization mode",
          "label": "init",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "Random",
            "PlusPlus",
            "Furthest",
            "User"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of clusters",
          "label": "k",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "KMeansParametersV3",
            "schema_type": "KMeansParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  KMeansParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nuser_points | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | User-specified points |  | [] | []\nmax_iterations | false | critical | int | false |  | 0 | Maximum training iterations |  | [] | []\nstandardize | false | secondary | boolean | false |  | true | Standardize columns |  | [] | []\nseed | false | expert | long | false |  | 0 | RNG Seed |  | [] | []\ninit | false | critical | enum | false |  | (null) | Initialization mode | [Random, PlusPlus, Furthest, User] | [] | []\nk | true | critical | int | false |  | 0 | Number of clusters |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nk | int | false |  | 0 | Number of clusters |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@303be7e8 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "DocsBase",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "num",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number for specifying an endpoint",
          "label": "num",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "http_method",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "HTTP method (GET, POST, DELETE) if fetching by path",
          "label": "http_method",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "path",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Path for specifying an endpoint",
          "label": "path",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "classname",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Class name, for fetching docs for a schema (DEPRECATED)",
          "label": "classname",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "schemaname",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Schema name (e.g., DocsV1), for fetching docs for a schema",
          "label": "schemaname",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "routes",
          "type": "Route[]",
          "is_schema": true,
          "schema_name": "RouteBase",
          "value": null,
          "help": "List of endpoint routes",
          "label": "routes",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "schemas",
          "type": "SchemaMetadata[]",
          "is_schema": true,
          "schema_name": "SchemaMetadataBase",
          "value": null,
          "help": "List of schemas",
          "label": "schemas",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "markdown",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Table of Contents Markdown",
          "label": "markdown",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "DocsBase",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DocsBase\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nnum | false | critical | int | false |  | 0 | Number for specifying an endpoint |  | [] | []\nhttp_method | false | critical | string | false |  | (null) | HTTP method (GET, POST, DELETE) if fetching by path |  | [] | []\npath | false | critical | string | false |  | (null) | Path for specifying an endpoint |  | [] | []\nclassname | false | critical | string | false |  | (null) | Class name, for fetching docs for a schema (DEPRECATED) |  | [] | []\nschemaname | false | critical | string | false |  | (null) | Schema name (e.g., DocsV1), for fetching docs for a schema |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nroutes | Route[] | true | RouteBase | (null) | List of endpoint routes |  | [] | []\nschemas | SchemaMetadata[] | true | SchemaMetadataBase | (null) | List of schemas |  | [] | []\nmarkdown | string | false |  | (null) | Table of Contents Markdown |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@2cf64915 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "SharedTreeV3",
      "superclass": "SupervisedModelBuilderSchema",
      "type": "SharedTree",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Parameters",
          "is_schema": true,
          "schema_name": "ModelParametersSchema",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "SharedTreeParametersV3",
              "schema_type": "SharedTreeParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "response_column": null,
            "balance_classes": false,
            "class_sampling_factors": null,
            "max_after_balance_size": 0,
            "max_confusion_matrix_size": 0,
            "max_hit_ratio_k": 0,
            "ntrees": 0,
            "max_depth": 0,
            "min_rows": 0,
            "nbins": 0,
            "seed": 0,
            "treeStats": null,
            "r2": 0,
            "mse_train": null,
            "mse_valid": null,
            "varimp": null
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "SharedTreeV3",
            "schema_type": "SharedTree"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SharedTreeV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | Parameters | true | ModelParametersSchema | hex.schemas.SharedTreeV3$SharedTreeParametersV3@5d3818c2 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@de1985e | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "KMeansModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "KMeansOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "centers",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Cluster Centers[k][features]",
          "label": "centers",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "centers_std",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Cluster Centers[k][features] on Standardized Data",
          "label": "centers_std",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "size",
          "type": "long[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Cluster Size[k]",
          "label": "size",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "within_mse",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Within cluster Mean Square Error per cluster",
          "label": "within_mse",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "avg_within_ss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Average within cluster Mean Square Error",
          "label": "avg_within_ss",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "avg_ss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Average Mean Square Error to grand mean",
          "label": "avg_ss",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "avg_between_ss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Average between cluster Mean Square Error",
          "label": "avg_between_ss",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "iterations",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Iterations executed",
          "label": "iterations",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "categorical_column_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of categorical columns trained on",
          "label": "categorical_column_count",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "KMeansModelOutputV3",
            "schema_type": "KMeansOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  KMeansModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ncenters | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Cluster Centers[k][features] |  | [] | []\ncenters_std | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Cluster Centers[k][features] on Standardized Data |  | [] | []\nsize | false | critical | long[] | false |  | (null) | Cluster Size[k] |  | [] | []\nwithin_mse | false | critical | double[] | false |  | (null) | Within cluster Mean Square Error per cluster |  | [] | []\navg_within_ss | false | critical | double | false |  | 0.0 | Average within cluster Mean Square Error |  | [] | []\navg_ss | false | critical | double | false |  | 0.0 | Average Mean Square Error to grand mean |  | [] | []\navg_between_ss | false | critical | double | false |  | 0.0 | Average between cluster Mean Square Error |  | [] | []\niterations | false | critical | double | false |  | 0.0 | Iterations executed |  | [] | []\ncategorical_column_count | false | critical | int | false |  | 0 | Number of categorical columns trained on |  | [] | []\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@55da4a70 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GrepModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "GrepOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "matches",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Matching strings",
          "label": "matches",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "offsets",
          "type": "long[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Byte offsets of matches",
          "label": "offsets",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GrepModelOutputV3",
            "schema_type": "GrepOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GrepModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmatches | false | critical | string[] | false |  | (null) | Matching strings |  | [] | []\noffsets | false | critical | long[] | false |  | (null) | Byte offsets of matches |  | [] | []\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@6e4d2b18 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ModelSchema",
      "superclass": "Schema",
      "type": "Model",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Parameters",
          "is_schema": true,
          "schema_name": "ModelParametersSchema",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "Output",
          "is_schema": true,
          "schema_name": "ModelOutputSchema",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ModelSchema",
            "schema_type": "Model"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelSchema\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | Parameters | true | ModelParametersSchema | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | Output | true | ModelOutputSchema | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@c486d3b | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "TutorialsV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "TutorialsV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  TutorialsV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@66fb42c9 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DRFModelOutputV3",
      "superclass": "SharedTreeModelOutputV3",
      "type": "DRFOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "variable_importances",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Variable Importances",
          "label": "variable_importances",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DRFModelOutputV3",
            "schema_type": "DRFOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DRFModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nvariable_importances | TwoDimTable | true | TwoDimTableV3 | (null) | Variable Importances |  | [] | []\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@79ddcef0 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "FramesV3",
      "superclass": "FramesBase",
      "type": "Frames",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Key of Frame of interest",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "column",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name of column of interest",
          "label": "column",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "row_offset",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Row offset to display",
          "label": "row_offset",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "row_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of rows to display",
          "label": "row_count",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "find_compatible_models",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Find and return compatible models?",
          "label": "find_compatible_models",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "path",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "File output path",
          "label": "path",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "force",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Overwrite existing fil",
          "label": "force",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frames",
          "type": "Frame[]",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Frames",
          "label": "frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_models",
          "type": "Model[]",
          "is_schema": true,
          "schema_name": "ModelSchema",
          "value": null,
          "help": "Compatible models",
          "label": "compatible_models",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domain",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains",
          "label": "domain",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "FramesV3",
            "schema_type": "Frames"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  FramesV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Key of Frame of interest |  | [] | []\ncolumn | false | critical | string | false |  | (null) | Name of column of interest |  | [] | []\nrow_offset | false | critical | long | false |  | 0 | Row offset to display |  | [] | []\nrow_count | false | critical | int | false |  | 0 | Number of rows to display |  | [] | []\nfind_compatible_models | false | critical | boolean | false |  | false | Find and return compatible models? |  | [] | []\npath | false | critical | string | false |  | (null) | File output path |  | [] | []\nforce | false | critical | boolean | false |  | false | Overwrite existing fil |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nrow_offset | long | false |  | 0 | Row offset to display |  | [] | []\nrow_count | int | false |  | 0 | Number of rows to display |  | [] | []\nframes | Frame[] | true | FrameV3 | (null) | Frames |  | [] | []\ncompatible_models | Model[] | true | ModelSchema | (null) | Compatible models |  | [] | []\ndomain | string[][] | false |  | (null) | Domains |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@513d2d11 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "SynonymV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "A word2vec model key.",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "target",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The target string to find synonyms.",
          "label": "target",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cnt",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Find the top `cnt` synonyms of the target word.",
          "label": "cnt",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "synonyms",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The synonyms.",
          "label": "synonyms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cos_sim",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The cosine similarities.",
          "label": "cos_sim",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "SynonymV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SynonymV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | false | critical | Key<Model> | true | ModelKeyV3 | (null) | A word2vec model key. |  | [] | []\ntarget | false | critical | string | false |  | (null) | The target string to find synonyms. |  | [] | []\ncnt | false | critical | int | false |  | 0 | Find the top `cnt` synonyms of the target word. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nsynonyms | string[] | false |  | (null) | The synonyms. |  | [] | []\ncos_sim | float[] | false |  | (null) | The cosine similarities. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@759e0c2 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "TimelineV3",
      "superclass": "Schema",
      "type": "Timeline",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "now",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Current time in millis.",
          "label": "now",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "self",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "This node",
          "label": "self",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "events",
          "type": "Iced[]",
          "is_schema": true,
          "schema_name": "EventV2",
          "value": null,
          "help": "recorded timeline events",
          "label": "events",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "TimelineV3",
            "schema_type": "Timeline"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  TimelineV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnow | long | false |  | 0 | Current time in millis. |  | [] | []\nself | string | false |  | (null) | This node |  | [] | []\nevents | Iced[] | true | EventV2 | (null) | recorded timeline events |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@1db2e453 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "MissingInserterV3",
      "superclass": "JobV3",
      "type": "MissingInserter",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dataset",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "dataset",
          "label": "dataset",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "fraction",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fraction of data to replace with a missing value",
          "label": "fraction",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "seed",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 8034662582951024000,
          "help": "Seed",
          "label": "seed",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Job>",
          "is_schema": true,
          "schema_name": "JobKeyV3",
          "value": null,
          "help": "Job Key",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Job description",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "status",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "job status",
          "label": "status",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "progress",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "progress, from 0 to 1",
          "label": "progress",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "progress_msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "current progress status description",
          "label": "progress_msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "start_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Start time",
          "label": "start_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "msec",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "runtime",
          "label": "msec",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dest",
          "type": "Key<Keyed>",
          "is_schema": true,
          "schema_name": "KeyV3",
          "value": null,
          "help": "destination key",
          "label": "dest",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exception",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "exception",
          "label": "exception",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "MissingInserterV3",
            "schema_type": "MissingInserter"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  MissingInserterV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ndataset | true | critical | Key<Frame> | true | FrameKeyV3 | (null) | dataset |  | [] | []\nfraction | true | critical | double | false |  | 0.0 | Fraction of data to replace with a missing value |  | [] | []\nseed | false | critical | long | false |  | 8034662582951024110 | Seed |  | [] | []\nkey | false | critical | Key<Job> | true | JobKeyV3 | (null) | Job Key |  | [] | []\ndescription | false | critical | string | false |  | (null) | Job description |  | [] | []\ndest | false | critical | Key<Keyed> | true | KeyV3 | (null) | destination key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nstatus | string | false |  | (null) | job status |  | [] | []\nprogress | float | false |  | 0.0 | progress, from 0 to 1 |  | [] | []\nprogress_msg | string | false |  | (null) | current progress status description |  | [] | []\nstart_time | long | false |  | 0 | Start time |  | [] | []\nmsec | long | false |  | 0 | runtime |  | [] | []\ndest | Key<Keyed> | true | KeyV3 | (null) | destination key |  | [] | []\nexception | string | false |  | (null) | exception |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4bac1460 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelMetricsPCAV3",
      "superclass": "ModelMetricsBase",
      "type": "ModelMetricsPCA",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "The model used for this scoring run.",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the model used for this scoring run.",
          "label": "model_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "The frame used for this scoring run.",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the frame used for this scoring run.",
          "label": "frame_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Optional description for this scoring run (to note out-of-bag, sampled data, etc.)",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "The category (e.g., Clustering) for the model used for this scoring run.",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "duration_in_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The duration in mS for this scoring run.",
          "label": "duration_in_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The time in mS since the epoch for the start of this scoring run.",
          "label": "scoring_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "predictions",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Predictions Frame.",
          "label": "predictions",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelMetricsPCAV3",
            "schema_type": "ModelMetricsPCA"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsPCAV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | false | critical | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | false | critical | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\ndescription | string | false |  | (null) | Optional description for this scoring run (to note out-of-bag, sampled data, etc.) |  | [] | []\nmodel_category | enum | false |  | (null) | The category (e.g., Clustering) for the model used for this scoring run. | [Unknown, Binomial, Multinomial, Regression, Clustering] | [] | []\nduration_in_ms | long | false |  | 0 | The duration in mS for this scoring run. |  | [] | []\nscoring_time | long | false |  | 0 | The time in mS since the epoch for the start of this scoring run. |  | [] | []\npredictions | Frame | true | FrameV3 | (null) | Predictions Frame. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@e6dd170 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "Word2VecV3",
      "superclass": "ModelBuilderSchema",
      "type": "Word2Vec",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Word2VecParameters",
          "is_schema": true,
          "schema_name": "Word2VecParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "Word2VecParametersV3",
              "schema_type": "Word2VecParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "vecSize": 0,
            "windowSize": 0,
            "sentSampleRate": 0,
            "normModel": null,
            "negSampleCnt": 0,
            "epochs": 0,
            "minWordFreq": 0,
            "initLearningRate": 0,
            "wordModel": null
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "Word2VecV3",
            "schema_type": "Word2Vec"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  Word2VecV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | Word2VecParameters | true | Word2VecParametersV3 | hex.schemas.Word2VecV3$Word2VecParametersV3@4bd11776 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@c5b6add | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ProfilerV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "depth",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 10,
          "help": "Stack trace depth",
          "label": "depth",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nodes",
          "type": "Iced[]",
          "is_schema": true,
          "schema_name": "ProfilerNodeV3",
          "value": null,
          "help": "",
          "label": "nodes",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ProfilerV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ProfilerV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ndepth | true | critical | int | false |  | 10 | Stack trace depth |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnodes | Iced[] | true | ProfilerNodeV3 | (null) |  |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@45c4d981 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "TwoDimTableV3",
      "superclass": "TwoDimTableBase",
      "type": "TwoDimTable",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Table Name",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Table Description",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "columns",
          "type": "Iced[]",
          "is_schema": true,
          "schema_name": "ColumnSpecsBase",
          "value": null,
          "help": "Column Specification",
          "label": "columns",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rowcount",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of Rows",
          "label": "rowcount",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "data",
          "type": "Polymorphic[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Table Data (col-major)",
          "label": "data",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "TwoDimTableV3",
            "schema_type": "TwoDimTable"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  TwoDimTableV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Table Name |  | [] | []\ndescription | string | false |  | (null) | Table Description |  | [] | []\ncolumns | Iced[] | true | ColumnSpecsBase | (null) | Column Specification |  | [] | []\nrowcount | int | false |  | 0 | Number of Rows |  | [] | []\ndata | Polymorphic[][] | false |  | (null) | Table Data (col-major) |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7ea3c7ef | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "AboutEntryV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Property name",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "value",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Property value",
          "label": "value",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "AboutEntryV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  AboutEntryV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Property name |  | [] | []\nvalue | string | false |  | (null) | Property value |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@329b5cdd | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "RemoveAllV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "RemoveAllV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  RemoveAllV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@75edcb1f | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "SchemaMetadataBase",
      "superclass": "Schema",
      "type": "SchemaMetadata",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "version",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Version number of the Schema.",
          "label": "version",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Simple name of the Schema.  NOTE: the schema_names form a single namespace.",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "superclass",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Simple name of the superclass of the Schema.  NOTE: the schema_names form a single namespace.",
          "label": "superclass",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Simple name of H2O type that this Schema represents.  Must not be changed after creation (treat as final).",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "fields",
          "type": "FieldMetadata[]",
          "is_schema": true,
          "schema_name": "FieldMetadataBase",
          "value": null,
          "help": "All the public fields of the schema",
          "label": "fields",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "markdown",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Documentation for the schema in Markdown format with GitHub extensions",
          "label": "markdown",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "SchemaMetadataBase",
            "schema_type": "SchemaMetadata"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SchemaMetadataBase\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nversion | false | critical | int | false |  | 0 | Version number of the Schema. |  | [] | []\nname | false | critical | string | false |  | (null) | Simple name of the Schema.  NOTE: the schema_names form a single namespace. |  | [] | []\nsuperclass | false | critical | string | false |  | (null) | Simple name of the superclass of the Schema.  NOTE: the schema_names form a single namespace. |  | [] | []\ntype | false | critical | string | false |  | (null) | Simple name of H2O type that this Schema represents.  Must not be changed after creation (treat as final). |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nfields | FieldMetadata[] | true | FieldMetadataBase | (null) | All the public fields of the schema |  | [] | []\nmarkdown | string | false |  | (null) | Documentation for the schema in Markdown format with GitHub extensions |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4eb29cb5 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 2,
      "name": "EventV2",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "date",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Time when the event was recorded. Format is hh:mm:ss:ms",
          "label": "date",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nanos",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": -1,
          "help": "Time in nanos",
          "label": "nanos",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "enum",
          "is_schema": false,
          "schema_name": "EventType",
          "value": "unknown",
          "help": "type of recorded event",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "unknown",
            "heartbeat",
            "network_msg",
            "io"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 2,
            "schema_name": "EventV2",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  EventV2\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ndate | false | critical | string | false |  | (null) | Time when the event was recorded. Format is hh:mm:ss:ms |  | [] | []\nnanos | false | critical | long | false |  | -1 | Time in nanos |  | [] | []\ntype | false | critical | enum | false |  | unknown | type of recorded event | [unknown, heartbeat, network_msg, io] | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@304e5770 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ExampleModelV3",
      "superclass": "ModelSchema",
      "type": "ExampleModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "ExampleParameters",
          "is_schema": true,
          "schema_name": "ExampleParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "ExampleOutput",
          "is_schema": true,
          "schema_name": "ExampleModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ExampleModelV3",
            "schema_type": "ExampleModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ExampleModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | ExampleParameters | true | ExampleParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | ExampleOutput | true | ExampleModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@674e92d6 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "CloudV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "version",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "version",
          "label": "version",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "node_idx",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Node index number cloud status is collected from (zero-based)",
          "label": "node_idx",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cloud_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "cloud_name",
          "label": "cloud_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cloud_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "cloud_size",
          "label": "cloud_size",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cloud_uptime_millis",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "cloud_uptime_millis",
          "label": "cloud_uptime_millis",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cloud_healthy",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "cloud_healthy",
          "label": "cloud_healthy",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "bad_nodes",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Nodes reporting unhealthy",
          "label": "bad_nodes",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "consensus",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Cloud voting is stable",
          "label": "consensus",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "locked",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Cloud is accepting new members or not",
          "label": "locked",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nodes",
          "type": "Iced[]",
          "is_schema": true,
          "schema_name": "NodeV1",
          "value": null,
          "help": "nodes",
          "label": "nodes",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "CloudV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  CloudV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nversion | string | false |  | (null) | version |  | [] | []\nnode_idx | int | false |  | 0 | Node index number cloud status is collected from (zero-based) |  | [] | []\ncloud_name | string | false |  | (null) | cloud_name |  | [] | []\ncloud_size | int | false |  | 0 | cloud_size |  | [] | []\ncloud_uptime_millis | long | false |  | 0 | cloud_uptime_millis |  | [] | []\ncloud_healthy | boolean | false |  | false | cloud_healthy |  | [] | []\nbad_nodes | int | false |  | 0 | Nodes reporting unhealthy |  | [] | []\nconsensus | boolean | false |  | false | Cloud voting is stable |  | [] | []\nlocked | boolean | false |  | false | Cloud is accepting new members or not |  | [] | []\nnodes | Iced[] | true | NodeV1 | (null) | nodes |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@578a5496 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GBMModelV3",
      "superclass": "SharedTreeModelV3",
      "type": "GBMModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "GBMParameters",
          "is_schema": true,
          "schema_name": "GBMParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "GBMOutput",
          "is_schema": true,
          "schema_name": "GBMModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GBMModelV3",
            "schema_type": "GBMModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GBMModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | GBMParameters | true | GBMParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | GBMOutput | true | GBMModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@3ab770c0 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelMetricsAutoEncoderV3",
      "superclass": "ModelMetricsBase",
      "type": "ModelMetricsAutoEncoder",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the reconstruction.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "The model used for this scoring run.",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the model used for this scoring run.",
          "label": "model_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "The frame used for this scoring run.",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the frame used for this scoring run.",
          "label": "frame_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Optional description for this scoring run (to note out-of-bag, sampled data, etc.)",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "The category (e.g., Clustering) for the model used for this scoring run.",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "duration_in_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The duration in mS for this scoring run.",
          "label": "duration_in_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The time in mS since the epoch for the start of this scoring run.",
          "label": "scoring_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "predictions",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Predictions Frame.",
          "label": "predictions",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelMetricsAutoEncoderV3",
            "schema_type": "ModelMetricsAutoEncoder"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsAutoEncoderV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | false | critical | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | false | critical | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmse | double | false |  | 0.0 | The Mean Squared Error of the reconstruction. |  | [] | []\nmodel | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\ndescription | string | false |  | (null) | Optional description for this scoring run (to note out-of-bag, sampled data, etc.) |  | [] | []\nmodel_category | enum | false |  | (null) | The category (e.g., Clustering) for the model used for this scoring run. | [Unknown, Binomial, Multinomial, Regression, Clustering] | [] | []\nduration_in_ms | long | false |  | 0 | The duration in mS for this scoring run. |  | [] | []\nscoring_time | long | false |  | 0 | The time in mS since the epoch for the start of this scoring run. |  | [] | []\npredictions | Frame | true | FrameV3 | (null) | Predictions Frame. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@614b6b5d | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "VecKeyV3",
      "superclass": "KeyV3",
      "type": "Key<Vec>",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for this Key.",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Name (string representation) for the type of Keyed this Key points to.",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "URL",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "URL for the resource that this Key points to, if one exists.",
          "label": "URL",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "VecKeyV3",
            "schema_type": "Key<Vec>"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  VecKeyV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nname | false | critical | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | false | critical | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | false | critical | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Name (string representation) for this Key. |  | [] | []\ntype | string | false |  | (null) | Name (string representation) for the type of Keyed this Key points to. |  | [] | []\nURL | string | false |  | (null) | URL for the resource that this Key points to, if one exists. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@1e75d892 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "SupervisedModelParametersSchema",
      "superclass": "ModelParametersSchema",
      "type": "SupervisedParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "response_column",
          "type": "VecSpecifier",
          "is_schema": true,
          "schema_name": "ColSpecifierV2",
          "value": null,
          "help": "Response column",
          "label": "response_column",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": [
            "ignored_columns"
          ]
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "balance_classes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "label": "balance_classes",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "class_sampling_factors",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes.",
          "label": "class_sampling_factors",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_after_balance_size",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "label": "max_after_balance_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_confusion_matrix_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum size (# classes) for confusion matrices to be printed in the Logs",
          "label": "max_confusion_matrix_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_hit_ratio_k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable)",
          "label": "max_hit_ratio_k",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "SupervisedModelParametersSchema",
            "schema_type": "SupervisedParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SupervisedModelParametersSchema\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nresponse_column | false | critical | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | false | secondary | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | false | expert | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | false | expert | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | false | expert | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | false | expert | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nresponse_column | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4add68dd | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ColumnSpecsBase",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column Name",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column Type",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "format",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column Format (printf)",
          "label": "format",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column Description",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ColumnSpecsBase",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ColumnSpecsBase\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Column Name |  | [] | []\ntype | string | false |  | (null) | Column Type |  | [] | []\nformat | string | false |  | (null) | Column Format (printf) |  | [] | []\ndescription | string | false |  | (null) | Column Description |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@e0fab91 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "VarImpBase",
      "superclass": "Schema",
      "type": "VarImp",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "varimp",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Variable importance of individual variables",
          "label": "varimp",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Names of variables",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "VarImpBase",
            "schema_type": "VarImp"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  VarImpBase\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nvarimp | float[] | false |  | (null) | Variable importance of individual variables |  | [] | []\nnames | string[] | false |  | (null) | Names of variables |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@26c8c3cd | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "HeartBeatEvent",
      "superclass": "EventV2",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sends",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": -1,
          "help": "number of sent heartbeats",
          "label": "sends",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "recvs",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": -1,
          "help": "number of received heartbeats",
          "label": "recvs",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "date",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Time when the event was recorded. Format is hh:mm:ss:ms",
          "label": "date",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nanos",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": -1,
          "help": "Time in nanos",
          "label": "nanos",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "enum",
          "is_schema": false,
          "schema_name": "EventType",
          "value": "unknown",
          "help": "type of recorded event",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "unknown",
            "heartbeat",
            "network_msg",
            "io"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "HeartBeatEvent",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  HeartBeatEvent\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nsends | false | critical | int | false |  | -1 | number of sent heartbeats |  | [] | []\nrecvs | false | critical | int | false |  | -1 | number of received heartbeats |  | [] | []\ndate | false | critical | string | false |  | (null) | Time when the event was recorded. Format is hh:mm:ss:ms |  | [] | []\nnanos | false | critical | long | false |  | -1 | Time in nanos |  | [] | []\ntype | false | critical | enum | false |  | unknown | type of recorded event | [unknown, heartbeat, network_msg, io] | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@46aedb9f | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "CoxPHParametersV3",
      "superclass": "ModelParametersSchema",
      "type": "CoxPHParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "CoxPHParametersV3",
            "schema_type": "CoxPHParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  CoxPHParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@1d4c7fa | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "FieldMetadataV3",
      "superclass": "FieldMetadataBase",
      "type": "FieldMetadata",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Field name in the Schema",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Type for this field",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_schema",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Type for this field is itself a Schema.",
          "label": "is_schema",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "schema_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Schema name for this field, if it is_schema, or the name of the enum, if it's an enum.",
          "label": "schema_name",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "value",
          "type": "Polymorphic",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Value for this field",
          "label": "value",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "A short help description to appear alongside the field in a UI",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "label",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The label that should be displayed for the field if the name is insufficient",
          "label": "label",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "required",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Is this field required, or is the default value generally sufficient?",
          "label": "required",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "level",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Level",
          "value": null,
          "help": "How important is this field?  The web UI uses the level to do a slow reveal of the parameters",
          "label": "level",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "critical",
            "secondary",
            "expert"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "direction",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Direction",
          "value": null,
          "help": "Is this field an input, output or inout?",
          "label": "direction",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "INPUT",
            "OUTPUT",
            "INOUT"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "values",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "For enum-type fields the allowed values are specified using the values annotation;  this is used in UIs to tell the user the allowed values, and for validation",
          "label": "values",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "json",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Should this field be rendered in the JSON representation?",
          "label": "json",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_member_of_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "For Vec-type fields this is the set of other Vec-type fields which must contain mutually exclusive values; for example, for a SupervisedModel the response_column must be mutually exclusive with the weights_column",
          "label": "is_member_of_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_mutually_exclusive_with",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "For Vec-type fields this is the set of Frame-type fields which must contain the named column; for example, for a SupervisedModel the response_column must be in both the training_frame and (if it's set) the validation_frame",
          "label": "is_mutually_exclusive_with",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  FieldMetadataV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nschema_name | false | critical | string | false |  | (null) | Schema name for this field, if it is_schema, or the name of the enum, if it's an enum. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nname | string | false |  | (null) | Field name in the Schema |  | [] | []\ntype | string | false |  | (null) | Type for this field |  | [] | []\nis_schema | boolean | false |  | false | Type for this field is itself a Schema. |  | [] | []\nvalue | Polymorphic | false |  | (null) | Value for this field |  | [] | []\nhelp | string | false |  | (null) | A short help description to appear alongside the field in a UI |  | [] | []\nlabel | string | false |  | (null) | The label that should be displayed for the field if the name is insufficient |  | [] | []\nrequired | boolean | false |  | false | Is this field required, or is the default value generally sufficient? |  | [] | []\nlevel | enum | false |  | (null) | How important is this field?  The web UI uses the level to do a slow reveal of the parameters | [critical, secondary, expert] | [] | []\ndirection | enum | false |  | (null) | Is this field an input, output or inout? | [INPUT, OUTPUT, INOUT] | [] | []\nvalues | string[] | false |  | (null) | For enum-type fields the allowed values are specified using the values annotation;  this is used in UIs to tell the user the allowed values, and for validation |  | [] | []\njson | boolean | false |  | false | Should this field be rendered in the JSON representation? |  | [] | []\nis_member_of_frames | string[] | false |  | (null) | For Vec-type fields this is the set of other Vec-type fields which must contain mutually exclusive values; for example, for a SupervisedModel the response_column must be mutually exclusive with the weights_column |  | [] | []\nis_mutually_exclusive_with | string[] | false |  | (null) | For Vec-type fields this is the set of Frame-type fields which must contain the named column; for example, for a SupervisedModel the response_column must be in both the training_frame and (if it's set) the validation_frame |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@3894ef06 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "KMeansV3",
      "superclass": "ClusteringModelBuilderSchema",
      "type": "KMeans",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "KMeansParameters",
          "is_schema": true,
          "schema_name": "KMeansParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "KMeansParametersV3",
              "schema_type": "KMeansParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "k": 0,
            "user_points": null,
            "max_iterations": 0,
            "standardize": true,
            "seed": 0,
            "init": null
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "KMeansV3",
            "schema_type": "KMeans"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  KMeansV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | KMeansParameters | true | KMeansParametersV3 | hex.schemas.KMeansV3$KMeansParametersV3@39d88fef | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@38d1b194 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ValidationMessageBase",
      "superclass": "Schema",
      "type": "ValidationMessage",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "message_type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Type of validation message (ERROR, WARN, INFO, HIDE)",
          "label": "message_type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "field_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Field to which the message applies",
          "label": "field_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "message",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Message text",
          "label": "message",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ValidationMessageBase",
            "schema_type": "ValidationMessage"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ValidationMessageBase\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmessage_type | string | false |  | (null) | Type of validation message (ERROR, WARN, INFO, HIDE) |  | [] | []\nfield_name | string | false |  | (null) | Field to which the message applies |  | [] | []\nmessage | string | false |  | (null) | Message text |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4ee188b0 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ExampleParametersV3",
      "superclass": "ModelParametersSchema",
      "type": "ExampleParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_iterations",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum training iterations.",
          "label": "max_iterations",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ExampleParametersV3",
            "schema_type": "ExampleParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ExampleParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmax_iterations | false | critical | int | false |  | 0 | Maximum training iterations. |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@38d50345 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DeepLearningV3",
      "superclass": "SupervisedModelBuilderSchema",
      "type": "DeepLearning",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "DeepLearningParameters",
          "is_schema": true,
          "schema_name": "DeepLearningParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "DeepLearningParametersV3",
              "schema_type": "DeepLearningParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "response_column": null,
            "balance_classes": false,
            "class_sampling_factors": null,
            "max_after_balance_size": 0,
            "max_confusion_matrix_size": 0,
            "max_hit_ratio_k": 0,
            "keep_cross_validation_splits": false,
            "checkpoint": null,
            "override_with_best_model": false,
            "autoencoder": false,
            "use_all_factor_levels": false,
            "activation": null,
            "hidden": null,
            "epochs": 0,
            "train_samples_per_iteration": 0,
            "target_ratio_comm_to_comp": 0,
            "seed": 0,
            "adaptive_rate": false,
            "rho": 0,
            "epsilon": 0,
            "rate": 0,
            "rate_annealing": 0,
            "rate_decay": 0,
            "momentum_start": 0,
            "momentum_ramp": 0,
            "momentum_stable": 0,
            "nesterov_accelerated_gradient": false,
            "input_dropout_ratio": 0,
            "hidden_dropout_ratios": null,
            "l1": 0,
            "l2": 0,
            "max_w2": 0,
            "initial_weight_distribution": null,
            "initial_weight_scale": 0,
            "loss": null,
            "score_interval": 0,
            "score_training_samples": 0,
            "score_validation_samples": 0,
            "score_duty_cycle": 0,
            "classification_stop": 0,
            "regression_stop": 0,
            "quiet_mode": false,
            "score_validation_sampling": null,
            "diagnostics": false,
            "variable_importances": false,
            "fast_mode": false,
            "ignore_const_cols": false,
            "force_load_balance": false,
            "replicate_training_data": false,
            "single_node_mode": false,
            "shuffle_training_data": false,
            "missing_values_handling": null,
            "sparse": false,
            "col_major": false,
            "average_activation": 0,
            "sparsity_beta": 0,
            "max_categorical_features": 0,
            "reproducible": false,
            "export_weights_and_biases": false
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DeepLearningV3",
            "schema_type": "DeepLearning"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DeepLearningV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | DeepLearningParameters | true | DeepLearningParametersV3 | hex.schemas.DeepLearningV3$DeepLearningParametersV3@28c9c429 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@566d74aa | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ProfilerNodeV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "node_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Node names",
          "label": "node_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "timestamp",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Timestamp (millis since epoch)",
          "label": "timestamp",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "entries",
          "type": "Iced[]",
          "is_schema": true,
          "schema_name": "ProfilerNodeEntryV3",
          "value": null,
          "help": "Profile entry list",
          "label": "entries",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ProfilerNodeV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ProfilerNodeV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnode_name | string | false |  | (null) | Node names |  | [] | []\ntimestamp | long | false |  | 0 | Timestamp (millis since epoch) |  | [] | []\nentries | Iced[] | true | ProfilerNodeEntryV3 | (null) | Profile entry list |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@2c06713a | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "InitIDV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "session_key",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Session ID",
          "label": "session_key",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "InitIDV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  InitIDV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nsession_key | string | false |  | (null) | Session ID |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5af3ad6a | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DRFV3",
      "superclass": "SharedTreeV3",
      "type": "DRF",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "DRFParameters",
          "is_schema": true,
          "schema_name": "DRFParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "DRFParametersV3",
              "schema_type": "DRFParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "response_column": null,
            "balance_classes": false,
            "class_sampling_factors": null,
            "max_after_balance_size": 0,
            "max_confusion_matrix_size": 0,
            "max_hit_ratio_k": 0,
            "ntrees": 0,
            "max_depth": 0,
            "min_rows": 0,
            "nbins": 0,
            "seed": 0,
            "treeStats": null,
            "r2": 0,
            "mse_train": null,
            "mse_valid": null,
            "varimp": null,
            "mtries": 0,
            "sample_rate": 0,
            "build_tree_one_node": false
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DRFV3",
            "schema_type": "DRF"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DRFV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | DRFParameters | true | DRFParametersV3 | hex.schemas.DRFV3$DRFParametersV3@33fe38cc | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7742f3be | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "NodePersistentStorageEntryV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "category",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Category name",
          "label": "category",
          "required": true,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Key name",
          "label": "name",
          "required": true,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "size",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Size in bytes of value",
          "label": "size",
          "required": true,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "timestamp_millis",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Epoch time in milliseconds of when the value was written",
          "label": "timestamp_millis",
          "required": true,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "NodePersistentStorageEntryV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NodePersistentStorageEntryV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ncategory | string | false |  | (null) | Category name |  | [] | []\nname | string | false |  | (null) | Key name |  | [] | []\nsize | long | false |  | 0 | Size in bytes of value |  | [] | []\ntimestamp_millis | long | false |  | 0 | Epoch time in milliseconds of when the value was written |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4c907c1d | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelBuildersV3",
      "superclass": "ModelBuildersBase",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Algo of ModelBuilder of interest",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_builders",
          "type": "Map<String,ModelBuilderSchema>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "ModelBuilders",
          "label": "model_builders",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelBuildersV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelBuildersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | false | critical | string | false |  | (null) | Algo of ModelBuilder of interest |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel_builders | Map<String,ModelBuilderSchema> | false |  | (null) | ModelBuilders |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@21c47b30 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "KillMinus3V3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "KillMinus3V3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  KillMinus3V3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@6a739da1 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "SchemaMetadataV3",
      "superclass": "SchemaMetadataBase",
      "type": "SchemaMetadata",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "version",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Version number of the Schema.",
          "label": "version",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Simple name of the Schema.  NOTE: the schema_names form a single namespace.",
          "label": "name",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "superclass",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Simple name of the superclass of the Schema.  NOTE: the schema_names form a single namespace.",
          "label": "superclass",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Simple name of H2O type that this Schema represents.  Must not be changed after creation (treat as final).",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "fields",
          "type": "FieldMetadata[]",
          "is_schema": true,
          "schema_name": "FieldMetadataV3",
          "value": null,
          "help": "All the public fields of the schema",
          "label": "fields",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "markdown",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Documentation for the schema in Markdown format with GitHub extensions",
          "label": "markdown",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "SchemaMetadataV3",
            "schema_type": "SchemaMetadata"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SchemaMetadataV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nversion | false | critical | int | false |  | 0 | Version number of the Schema. |  | [] | []\nname | false | critical | string | false |  | (null) | Simple name of the Schema.  NOTE: the schema_names form a single namespace. |  | [] | []\nsuperclass | false | critical | string | false |  | (null) | Simple name of the superclass of the Schema.  NOTE: the schema_names form a single namespace. |  | [] | []\ntype | false | critical | string | false |  | (null) | Simple name of H2O type that this Schema represents.  Must not be changed after creation (treat as final). |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nfields | FieldMetadata[] | true | FieldMetadataV3 | (null) | All the public fields of the schema |  | [] | []\nmarkdown | string | false |  | (null) | Documentation for the schema in Markdown format with GitHub extensions |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4c71eba0 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GrepParametersV3",
      "superclass": "ModelParametersSchema",
      "type": "GrepParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "regex",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "regex",
          "label": "regex",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GrepParametersV3",
            "schema_type": "GrepParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GrepParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nregex | false | critical | string | false |  | (null) | regex |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4b247c95 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ParseV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Final hex key name",
          "label": "destination_key",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "source_keys",
          "type": "Key<Frame>[]",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Source keys",
          "label": "source_keys",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parse_type",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ParserType",
          "value": null,
          "help": "Parser type",
          "label": "parse_type",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "AUTO",
            "ARFF",
            "XLS",
            "XLSX",
            "CSV",
            "SVMLight"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "separator",
          "type": "byte",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Field separator",
          "label": "separator",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "single_quotes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Single Quotes",
          "label": "single_quotes",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "check_header",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Check header: 0 means guess, +1 means 1st line is header not data, -1 means 1st line is data not header",
          "label": "check_header",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "number_columns",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of columns",
          "label": "number_columns",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "column_names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names",
          "label": "column_names",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "column_types",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Value types for columns",
          "label": "column_types",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical columns",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "na_strings",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "NA strings for columns",
          "label": "na_strings",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "chunk_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Size of individual parse tasks",
          "label": "chunk_size",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "delete_on_done",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Delete input key after parse",
          "label": "delete_on_done",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "blocking",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Block until the parse completes (as opposed to returning early and requiring polling",
          "label": "blocking",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "remove_frame",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Remove frame after blocking parse, and return array of Vecs",
          "label": "remove_frame",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Parse job",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rows",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Rows",
          "label": "rows",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "vec_keys",
          "type": "Key<Vec>[]",
          "is_schema": true,
          "schema_name": "VecKeyV3",
          "value": null,
          "help": "Vec keys",
          "label": "vec_keys",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ParseV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ParseV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ndestination_key | true | critical | Key<Frame> | true | FrameKeyV3 | (null) | Final hex key name |  | [] | []\nsource_keys | true | critical | Key<Frame>[] | true | FrameKeyV3 | (null) | Source keys |  | [] | []\nparse_type | false | critical | enum | false |  | (null) | Parser type | [AUTO, ARFF, XLS, XLSX, CSV, SVMLight] | [] | []\nseparator | false | critical | byte | false |  | 0 | Field separator |  | [] | []\nsingle_quotes | false | critical | boolean | false |  | false | Single Quotes |  | [] | []\ncheck_header | false | critical | int | false |  | 0 | Check header: 0 means guess, +1 means 1st line is header not data, -1 means 1st line is data not header |  | [] | []\nnumber_columns | false | critical | int | false |  | 0 | Number of columns |  | [] | []\ncolumn_names | false | critical | string[] | false |  | (null) | Column names |  | [] | []\ncolumn_types | false | critical | string[] | false |  | (null) | Value types for columns |  | [] | []\ndomains | false | critical | string[][] | false |  | (null) | Domains for categorical columns |  | [] | []\nna_strings | false | critical | string[] | false |  | (null) | NA strings for columns |  | [] | []\nchunk_size | false | critical | int | false |  | 0 | Size of individual parse tasks |  | [] | []\ndelete_on_done | false | critical | boolean | false |  | false | Delete input key after parse |  | [] | []\nblocking | false | critical | boolean | false |  | false | Block until the parse completes (as opposed to returning early and requiring polling |  | [] | []\nremove_frame | false | critical | boolean | false |  | false | Remove frame after blocking parse, and return array of Vecs |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\njob | Job | true | JobV3 | (null) | Parse job |  | [] | []\nrows | long | false |  | 0 | Rows |  | [] | []\nvec_keys | Key<Vec>[] | true | VecKeyV3 | (null) | Vec keys |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@486f40bd | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "WaterMeterCpuTicksV3",
      "superclass": "Schema",
      "type": "WaterMeterCpuTicks",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nodeidx",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Index of node to query ticks for (0-based)",
          "label": "nodeidx",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cpu_ticks",
          "type": "long[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "array of tick counts per core",
          "label": "cpu_ticks",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "WaterMeterCpuTicksV3",
            "schema_type": "WaterMeterCpuTicks"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  WaterMeterCpuTicksV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nnodeidx | true | critical | int | false |  | 0 | Index of node to query ticks for (0-based) |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ncpu_ticks | long[][] | false |  | (null) | array of tick counts per core |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@35d72 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ExampleV3",
      "superclass": "ModelBuilderSchema",
      "type": "Example",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "ExampleParameters",
          "is_schema": true,
          "schema_name": "ExampleParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "ExampleParametersV3",
              "schema_type": "ExampleParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "max_iterations": 0
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ExampleV3",
            "schema_type": "Example"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ExampleV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | ExampleParameters | true | ExampleParametersV3 | hex.schemas.ExampleV3$ExampleParametersV3@5cebe75f | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@3a33da2 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "JobV3",
      "superclass": "Schema",
      "type": "Job",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Job>",
          "is_schema": true,
          "schema_name": "JobKeyV3",
          "value": null,
          "help": "Job Key",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Job description",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "status",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "job status",
          "label": "status",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "progress",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "progress, from 0 to 1",
          "label": "progress",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "progress_msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "current progress status description",
          "label": "progress_msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "start_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Start time",
          "label": "start_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "msec",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "runtime",
          "label": "msec",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dest",
          "type": "Key<Keyed>",
          "is_schema": true,
          "schema_name": "KeyV3",
          "value": null,
          "help": "destination key",
          "label": "dest",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exception",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "exception",
          "label": "exception",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "JobV3",
            "schema_type": "Job"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  JobV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | false | critical | Key<Job> | true | JobKeyV3 | (null) | Job Key |  | [] | []\ndescription | false | critical | string | false |  | (null) | Job description |  | [] | []\ndest | false | critical | Key<Keyed> | true | KeyV3 | (null) | destination key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nstatus | string | false |  | (null) | job status |  | [] | []\nprogress | float | false |  | 0.0 | progress, from 0 to 1 |  | [] | []\nprogress_msg | string | false |  | (null) | current progress status description |  | [] | []\nstart_time | long | false |  | 0 | Start time |  | [] | []\nmsec | long | false |  | 0 | runtime |  | [] | []\ndest | Key<Keyed> | true | KeyV3 | (null) | destination key |  | [] | []\nexception | string | false |  | (null) | exception |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5223588b | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ModelsBase",
      "superclass": "Schema",
      "type": "Models",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Key of Model of interest",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "preview",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Return potentially abridged model suitable for viewing in a browser",
          "label": "preview",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "find_compatible_frames",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Find and return compatible frames?",
          "label": "find_compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "models",
          "type": "Model[]",
          "is_schema": true,
          "schema_name": "ModelSchema",
          "value": null,
          "help": "Models",
          "label": "models",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "Frame[]",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Compatible frames",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ModelsBase",
            "schema_type": "Models"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelsBase\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Key of Model of interest |  | [] | []\npreview | false | critical | boolean | false |  | false | Return potentially abridged model suitable for viewing in a browser |  | [] | []\nfind_compatible_frames | false | critical | boolean | false |  | false | Find and return compatible frames? |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmodels | Model[] | true | ModelSchema | (null) | Models |  | [] | []\ncompatible_frames | Frame[] | true | FrameV3 | (null) | Compatible frames |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@e8a37ce | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "H2OModelBuilderErrorV3",
      "superclass": "H2OErrorV3",
      "type": "H2OModelBuilderError",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Parameters",
          "is_schema": true,
          "schema_name": "ModelParametersSchema",
          "value": null,
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "timestamp",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Milliseconds since the epoch for the time that this H2OError instance was created.  Generally this is a short time since the underlying error ocurred.",
          "label": "timestamp",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "error_url",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Error url",
          "label": "error_url",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Message intended for the end user (a data scientist).",
          "label": "msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dev_msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Potentially more detailed message intended for a developer (e.g. a front end engineer or someone designing a language binding).",
          "label": "dev_msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status code for this error.",
          "label": "http_status",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "values",
          "type": "Map<String,Object>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Any values that are relevant to reporting or handling this error.  Examples are a key name if the error is on a key, or a field name and object name if it's on a specific field.",
          "label": "values",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exception_type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Exception type, if any.",
          "label": "exception_type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exception_msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Raw exception message, if any.",
          "label": "exception_msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "stacktrace",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Stacktrace, if any.",
          "label": "stacktrace",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "H2OModelBuilderErrorV3",
            "schema_type": "H2OModelBuilderError"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  H2OModelBuilderErrorV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | Parameters | true | ModelParametersSchema | (null) | Model builder parameters. |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\ntimestamp | long | false |  | 0 | Milliseconds since the epoch for the time that this H2OError instance was created.  Generally this is a short time since the underlying error ocurred. |  | [] | []\nerror_url | string | false |  | (null) | Error url |  | [] | []\nmsg | string | false |  | (null) | Message intended for the end user (a data scientist). |  | [] | []\ndev_msg | string | false |  | (null) | Potentially more detailed message intended for a developer (e.g. a front end engineer or someone designing a language binding). |  | [] | []\nhttp_status | int | false |  | 0 | HTTP status code for this error. |  | [] | []\nvalues | Map<String,Object> | false |  | (null) | Any values that are relevant to reporting or handling this error.  Examples are a key name if the error is on a key, or a field name and object name if it's on a specific field. |  | [] | []\nexception_type | string | false |  | (null) | Exception type, if any. |  | [] | []\nexception_msg | string | false |  | (null) | Raw exception message, if any. |  | [] | []\nstacktrace | string[] | false |  | (null) | Stacktrace, if any. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@1455bcd7 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ModelMetricsBase",
      "superclass": "Schema",
      "type": "ModelMetrics",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "The model used for this scoring run.",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the model used for this scoring run.",
          "label": "model_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "The frame used for this scoring run.",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the frame used for this scoring run.",
          "label": "frame_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Optional description for this scoring run (to note out-of-bag, sampled data, etc.)",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "The category (e.g., Clustering) for the model used for this scoring run.",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "duration_in_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The duration in mS for this scoring run.",
          "label": "duration_in_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The time in mS since the epoch for the start of this scoring run.",
          "label": "scoring_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "predictions",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Predictions Frame.",
          "label": "predictions",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ModelMetricsBase",
            "schema_type": "ModelMetrics"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsBase\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | false | critical | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | false | critical | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\ndescription | string | false |  | (null) | Optional description for this scoring run (to note out-of-bag, sampled data, etc.) |  | [] | []\nmodel_category | enum | false |  | (null) | The category (e.g., Clustering) for the model used for this scoring run. | [Unknown, Binomial, Multinomial, Regression, Clustering] | [] | []\nduration_in_ms | long | false |  | 0 | The duration in mS for this scoring run. |  | [] | []\nscoring_time | long | false |  | 0 | The time in mS since the epoch for the start of this scoring run. |  | [] | []\npredictions | Frame | true | FrameV3 | (null) | Predictions Frame. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@8e0d1af | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ConfusionMatrixBase",
      "superclass": "Schema",
      "type": "ConfusionMatrix",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "table",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Annotated confusion matrix",
          "label": "table",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ConfusionMatrixBase",
            "schema_type": "ConfusionMatrix"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ConfusionMatrixBase\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ntable | TwoDimTable | true | TwoDimTableV3 | (null) | Annotated confusion matrix |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5fe63cb6 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "RouteBase",
      "superclass": "Schema",
      "type": "Route",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "http_method",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "http_method",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "url_pattern",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "url_pattern",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "summary",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "summary",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "handler_class",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "handler_class",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "handler_method",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "handler_method",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "input_schema",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "input_schema",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output_schema",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "output_schema",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "doc_method",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "doc_method",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "path_params",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "path_params",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "markdown",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "",
          "label": "markdown",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "RouteBase",
            "schema_type": "Route"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  RouteBase\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nhttp_method | string | false |  | (null) |  |  | [] | []\nurl_pattern | string | false |  | (null) |  |  | [] | []\nsummary | string | false |  | (null) |  |  | [] | []\nhandler_class | string | false |  | (null) |  |  | [] | []\nhandler_method | string | false |  | (null) |  |  | [] | []\ninput_schema | string | false |  | (null) |  |  | [] | []\noutput_schema | string | false |  | (null) |  |  | [] | []\ndoc_method | string | false |  | (null) |  |  | [] | []\npath_params | string[] | false |  | (null) |  |  | [] | []\nmarkdown | string | false |  | (null) |  |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@49c01ea | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "NetworkTestV3",
      "superclass": "Schema",
      "type": "NetworkTest",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "microseconds_collective",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Collective broadcast/reduce times in microseconds (for each message size)",
          "label": "microseconds_collective",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "bandwidths_collective",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Collective bandwidths in Bytes/sec (for each message size, for each node)",
          "label": "bandwidths_collective",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "microseconds",
          "type": "double[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Round-trip times in microseconds (for each message size, for each node)",
          "label": "microseconds",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "bandwidths",
          "type": "double[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Bi-directional bandwidths in Bytes/sec (for each message size, for each node)",
          "label": "bandwidths",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nodes",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Nodes",
          "label": "nodes",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "table",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "NetworkTestResults",
          "label": "table",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "NetworkTestV3",
            "schema_type": "NetworkTest"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NetworkTestV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmicroseconds_collective | double[] | false |  | (null) | Collective broadcast/reduce times in microseconds (for each message size) |  | [] | []\nbandwidths_collective | double[] | false |  | (null) | Collective bandwidths in Bytes/sec (for each message size, for each node) |  | [] | []\nmicroseconds | double[][] | false |  | (null) | Round-trip times in microseconds (for each message size, for each node) |  | [] | []\nbandwidths | double[][] | false |  | (null) | Bi-directional bandwidths in Bytes/sec (for each message size, for each node) |  | [] | []\nnodes | string[] | false |  | (null) | Nodes |  | [] | []\ntable | TwoDimTable | true | TwoDimTableV3 | (null) | NetworkTestResults |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@1e41ac03 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 1,
      "name": "NodeV1",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "h2o",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "IP",
          "label": "h2o",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ip_port",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "IP address and port in the form a.b.c.d:e",
          "label": "ip_port",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "healthy",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "(now-last_ping)<HeartbeatThread.TIMEOUT",
          "label": "healthy",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "last_ping",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Time (in msec) of last ping",
          "label": "last_ping",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sys_load",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "System load; average #runnables/#cores",
          "label": "sys_load",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "gflops",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Linpack GFlops",
          "label": "gflops",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mem_bw",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Memory Bandwidth",
          "label": "mem_bw",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "total_value_size",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Data on Node (memory or disk)",
          "label": "total_value_size",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mem_value_size",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Data on Node (memory only)",
          "label": "mem_value_size",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "num_keys",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "#local keys",
          "label": "num_keys",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "free_mem",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Free heap",
          "label": "free_mem",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "tot_mem",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Total heap",
          "label": "tot_mem",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_mem",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max heap",
          "label": "max_mem",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "free_disk",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Free disk",
          "label": "free_disk",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_disk",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max disk",
          "label": "max_disk",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rpcs_active",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Active Remote Procedure Calls",
          "label": "rpcs_active",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "fjthrds",
          "type": "short[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "F/J Thread count, by priority",
          "label": "fjthrds",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "fjqueue",
          "type": "short[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "F/J Task count, by priority",
          "label": "fjqueue",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "tcps_active",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Open TCP connections",
          "label": "tcps_active",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "open_fds",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Open File Descripters",
          "label": "open_fds",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "num_cpus",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "num_cpus",
          "label": "num_cpus",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cpus_allowed",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "cpus_allowed",
          "label": "cpus_allowed",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nthreads",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "nthreads",
          "label": "nthreads",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "pid",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "PID",
          "label": "pid",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 1,
            "schema_name": "NodeV1",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NodeV1\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nh2o | string | false |  | (null) | IP |  | [] | []\nip_port | string | false |  | (null) | IP address and port in the form a.b.c.d:e |  | [] | []\nhealthy | boolean | false |  | false | (now-last_ping)<HeartbeatThread.TIMEOUT |  | [] | []\nlast_ping | long | false |  | 0 | Time (in msec) of last ping |  | [] | []\nsys_load | float | false |  | 0.0 | System load; average #runnables/#cores |  | [] | []\ngflops | double | false |  | 0.0 | Linpack GFlops |  | [] | []\nmem_bw | double | false |  | 0.0 | Memory Bandwidth |  | [] | []\ntotal_value_size | long | false |  | 0 | Data on Node (memory or disk) |  | [] | []\nmem_value_size | long | false |  | 0 | Data on Node (memory only) |  | [] | []\nnum_keys | int | false |  | 0 | #local keys |  | [] | []\nfree_mem | long | false |  | 0 | Free heap |  | [] | []\ntot_mem | long | false |  | 0 | Total heap |  | [] | []\nmax_mem | long | false |  | 0 | Max heap |  | [] | []\nfree_disk | long | false |  | 0 | Free disk |  | [] | []\nmax_disk | long | false |  | 0 | Max disk |  | [] | []\nrpcs_active | int | false |  | 0 | Active Remote Procedure Calls |  | [] | []\nfjthrds | short[] | false |  | (null) | F/J Thread count, by priority |  | [] | []\nfjqueue | short[] | false |  | (null) | F/J Task count, by priority |  | [] | []\ntcps_active | int | false |  | 0 | Open TCP connections |  | [] | []\nopen_fds | int | false |  | 0 | Open File Descripters |  | [] | []\nnum_cpus | int | false |  | 0 | num_cpus |  | [] | []\ncpus_allowed | int | false |  | 0 | cpus_allowed |  | [] | []\nnthreads | int | false |  | 0 | nthreads |  | [] | []\npid | string | false |  | (null) | PID |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@69840879 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "ClusteringModelParametersSchema",
      "superclass": "ModelParametersSchema",
      "type": "ClusteringParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of clusters",
          "label": "k",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "ClusteringModelParametersSchema",
            "schema_type": "ClusteringParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ClusteringModelParametersSchema\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nk | true | critical | int | false |  | 0 | Number of clusters |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nk | int | false |  | 0 | Number of clusters |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5b48760d | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 2,
      "name": "ColV2",
      "superclass": "Schema",
      "type": "Vec",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "label",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "label",
          "label": "label",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "missing_count",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "missing",
          "label": "missing_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "zero_count",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "zeros",
          "label": "zero_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "positive_infinity_count",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "positive infinities",
          "label": "positive_infinity_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "negative_infinity_count",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "negative infinities",
          "label": "negative_infinity_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mins",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "mins",
          "label": "mins",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "maxs",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "maxs",
          "label": "maxs",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mean",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "mean",
          "label": "mean",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sigma",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "sigma",
          "label": "sigma",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "datatype: {enum, string, int, real, time, uuid}",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domain",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "domain; not-null for enum columns only",
          "label": "domain",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "data",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "data",
          "label": "data",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "string_data",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "string data",
          "label": "string_data",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "precision",
          "type": "byte",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "decimal precision, -1 for all digits",
          "label": "precision",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "histogram_bins",
          "type": "long[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Histogram bins; null if not computed",
          "label": "histogram_bins",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "histogram_base",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Start of histogram bin zero",
          "label": "histogram_base",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "histogram_stride",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Stride per bin",
          "label": "histogram_stride",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "percentiles",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Percentile values, matching the default percentiles",
          "label": "percentiles",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 2,
            "schema_name": "ColV2",
            "schema_type": "Vec"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ColV2\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nlabel | string | false |  | (null) | label |  | [] | []\nmissing_count | long | false |  | 0 | missing |  | [] | []\nzero_count | long | false |  | 0 | zeros |  | [] | []\npositive_infinity_count | long | false |  | 0 | positive infinities |  | [] | []\nnegative_infinity_count | long | false |  | 0 | negative infinities |  | [] | []\nmins | double[] | false |  | (null) | mins |  | [] | []\nmaxs | double[] | false |  | (null) | maxs |  | [] | []\nmean | double | false |  | 0.0 | mean |  | [] | []\nsigma | double | false |  | 0.0 | sigma |  | [] | []\ntype | string | false |  | (null) | datatype: {enum, string, int, real, time, uuid} |  | [] | []\ndomain | string[] | false |  | (null) | domain; not-null for enum columns only |  | [] | []\ndata | double[] | false |  | (null) | data |  | [] | []\nstring_data | string[] | false |  | (null) | string data |  | [] | []\nprecision | byte | false |  | 0 | decimal precision, -1 for all digits |  | [] | []\nhistogram_bins | long[] | false |  | (null) | Histogram bins; null if not computed |  | [] | []\nhistogram_base | double | false |  | 0.0 | Start of histogram bin zero |  | [] | []\nhistogram_stride | double | false |  | 0.0 | Stride per bin |  | [] | []\npercentiles | double[] | false |  | (null) | Percentile values, matching the default percentiles |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@723e7e4c | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "SharedTreeParametersV3",
      "superclass": "SupervisedModelParametersSchema",
      "type": "SharedTreeParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ntrees",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of trees.",
          "label": "ntrees",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_depth",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum tree depth.",
          "label": "max_depth",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "min_rows",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Fewest allowed observations in a leaf (in R called 'nodesize').",
          "label": "min_rows",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nbins",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Build a histogram of this many bins, then split at the best point",
          "label": "nbins",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "seed",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Seed for pseudo random number generator (if applicable)",
          "label": "seed",
          "required": false,
          "level": "expert",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "treeStats",
          "type": "TreeStats",
          "is_schema": true,
          "schema_name": "TreeStatsV3",
          "value": null,
          "help": "More in-depth tree stats",
          "label": "treeStats",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "r2",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "r2 metric on validation set: 1-(MSE(model)/variance(response))",
          "label": "r2",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse_train",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Training set error per-tree (scored).",
          "label": "mse_train",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse_valid",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Validation set error per-tree (scored).",
          "label": "mse_valid",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "varimp",
          "type": "VarImp",
          "is_schema": true,
          "schema_name": "VarImpV3",
          "value": null,
          "help": "Variable Importance",
          "label": "varimp",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "response_column",
          "type": "VecSpecifier",
          "is_schema": true,
          "schema_name": "ColSpecifierV2",
          "value": null,
          "help": "Response column",
          "label": "response_column",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": [
            "ignored_columns"
          ]
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "balance_classes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "label": "balance_classes",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "class_sampling_factors",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes.",
          "label": "class_sampling_factors",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_after_balance_size",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "label": "max_after_balance_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_confusion_matrix_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum size (# classes) for confusion matrices to be printed in the Logs",
          "label": "max_confusion_matrix_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_hit_ratio_k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable)",
          "label": "max_hit_ratio_k",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "SharedTreeParametersV3",
            "schema_type": "SharedTreeParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SharedTreeParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nntrees | false | critical | int | false |  | 0 | Number of trees. |  | [] | []\nmax_depth | false | critical | int | false |  | 0 | Maximum tree depth. |  | [] | []\nmin_rows | false | critical | int | false |  | 0 | Fewest allowed observations in a leaf (in R called 'nodesize'). |  | [] | []\nnbins | false | critical | int | false |  | 0 | Build a histogram of this many bins, then split at the best point |  | [] | []\nseed | false | expert | long | false |  | 0 | Seed for pseudo random number generator (if applicable) |  | [] | []\nresponse_column | false | critical | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | false | secondary | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | false | expert | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | false | expert | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | false | expert | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | false | expert | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ntreeStats | TreeStats | true | TreeStatsV3 | (null) | More in-depth tree stats |  | [] | []\nr2 | double | false |  | 0.0 | r2 metric on validation set: 1-(MSE(model)/variance(response)) |  | [] | []\nmse_train | double[] | false |  | (null) | Training set error per-tree (scored). |  | [] | []\nmse_valid | double[] | false |  | (null) | Validation set error per-tree (scored). |  | [] | []\nvarimp | VarImp | true | VarImpV3 | (null) | Variable Importance |  | [] | []\nresponse_column | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@64d5ea2c | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": -1,
      "name": "IOEvent",
      "superclass": "EventV2",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "io_flavor",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "unknown",
          "help": "flavor of the recorded io (ice/hdfs/...)",
          "label": "io_flavor",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "node",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "unknown",
          "help": "node where this io event happened",
          "label": "node",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "data",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "unknown",
          "help": "data info",
          "label": "data",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "date",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": "15:59:59:999",
          "help": "Time when the event was recorded. Format is hh:mm:ss:ms",
          "label": "date",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nanos",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": -1,
          "help": "Time in nanos",
          "label": "nanos",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "type",
          "type": "enum",
          "is_schema": false,
          "schema_name": "EventType",
          "value": "io",
          "help": "type of recorded event",
          "label": "type",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "unknown",
            "heartbeat",
            "network_msg",
            "io"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": -1,
            "schema_name": "IOEvent",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  IOEvent\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nio_flavor | false | critical | string | false |  | unknown | flavor of the recorded io (ice/hdfs/...) |  | [] | []\nnode | false | critical | string | false |  | unknown | node where this io event happened |  | [] | []\ndata | false | critical | string | false |  | unknown | data info |  | [] | []\ndate | false | critical | string | false |  | 15:59:59:999 | Time when the event was recorded. Format is hh:mm:ss:ms |  | [] | []\nnanos | false | critical | long | false |  | -1 | Time in nanos |  | [] | []\ntype | false | critical | enum | false |  | io | type of recorded event | [unknown, heartbeat, network_msg, io] | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@1801226c | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "PCAV3",
      "superclass": "ModelBuilderSchema",
      "type": "PCA",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "PCAParameters",
          "is_schema": true,
          "schema_name": "PCAParametersV3",
          "value": {
            "__meta": {
              "schema_version": 3,
              "schema_name": "PCAParametersV3",
              "schema_type": "PCAParameters"
            },
            "destination_key": null,
            "training_frame": null,
            "validation_frame": null,
            "ignored_columns": null,
            "dropNA20Cols": false,
            "transform": null,
            "k": 0,
            "gamma": 0,
            "max_iterations": 0,
            "seed": 0,
            "init": null,
            "user_points": null,
            "loading_key": null
          },
          "help": "Model builder parameters.",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this ModelBuilder.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "can_build",
          "type": "enum[]",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Model categories this ModelBuilder can build.",
          "label": "can_build",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "job",
          "type": "Job",
          "is_schema": true,
          "schema_name": "JobV3",
          "value": null,
          "help": "Job Key",
          "label": "job",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_messages",
          "type": "ValidationMessage[]",
          "is_schema": true,
          "schema_name": "ValidationMessageV2",
          "value": null,
          "help": "Parameter validation messages",
          "label": "validation_messages",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_error_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Count of parameter validation errors",
          "label": "validation_error_count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__http_status",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "HTTP status to return for this build.",
          "label": "__http_status",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": false,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "PCAV3",
            "schema_type": "PCA"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  PCAV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nparameters | false | critical | PCAParameters | true | PCAParametersV3 | hex.schemas.PCAV3$PCAParametersV3@727aecc3 | Model builder parameters. |  | [] | []\n__http_status | false | critical | int | false |  | 0 | HTTP status to return for this build. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nalgo | string | false |  | (null) | The algo name for this ModelBuilder. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this ModelBuilder (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\ncan_build | enum[] | false |  | (null) | Model categories this ModelBuilder can build. | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\njob | Job | true | JobV3 | (null) | Job Key |  | [] | []\nvalidation_messages | ValidationMessage[] | true | ValidationMessageV2 | (null) | Parameter validation messages |  | [] | []\nvalidation_error_count | int | false |  | 0 | Count of parameter validation errors |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@644e30ec | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "CoxPHModelOutputV3",
      "superclass": "ModelOutputSchema",
      "type": "CoxPHOutput",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "names",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Column names.",
          "label": "names",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "domains",
          "type": "string[][]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Domains for categorical (enum) columns.",
          "label": "domains",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "Category of the model (e.g., Binomial).",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering",
            "AutoEncoder",
            "DimReduction"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Model summary",
          "label": "model_summary",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_history",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Scoring history",
          "label": "scoring_history",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Training data model metrics",
          "label": "training_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_metrics",
          "type": "ModelMetrics",
          "is_schema": true,
          "schema_name": "ModelMetricsBase",
          "value": null,
          "help": "Validation data model metrics",
          "label": "validation_metrics",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "help",
          "type": "Map<String,String>",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Help information for output fields",
          "label": "help",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "CoxPHModelOutputV3",
            "schema_type": "CoxPHOutput"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  CoxPHModelOutputV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel_summary | false | critical | TwoDimTable | true | TwoDimTableV3 | (null) | Model summary |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nnames | string[] | false |  | (null) | Column names. |  | [] | []\ndomains | string[][] | false |  | (null) | Domains for categorical (enum) columns. |  | [] | []\nmodel_category | enum | false |  | (null) | Category of the model (e.g., Binomial). | [Unknown, Binomial, Multinomial, Regression, Clustering, AutoEncoder, DimReduction] | [] | []\nscoring_history | TwoDimTable | true | TwoDimTableV3 | (null) | Scoring history |  | [] | []\ntraining_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Training data model metrics |  | [] | []\nvalidation_metrics | ModelMetrics | true | ModelMetricsBase | (null) | Validation data model metrics |  | [] | []\nhelp | Map<String,String> | false |  | (null) | Help information for output fields |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@496e0966 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "SplitFrameV3",
      "superclass": "JobV3",
      "type": "SplitFrame",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dataset",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Dataset",
          "label": "dataset",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ratios",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Split ratios - resulting number of split is ratios.length+1",
          "label": "ratios",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dest_keys",
          "type": "Key<Frame>[]",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Destination keys for each output frame split.",
          "label": "dest_keys",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Job>",
          "is_schema": true,
          "schema_name": "JobKeyV3",
          "value": null,
          "help": "Job Key",
          "label": "key",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Job description",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "status",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "job status",
          "label": "status",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "progress",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "progress, from 0 to 1",
          "label": "progress",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "progress_msg",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "current progress status description",
          "label": "progress_msg",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "start_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Start time",
          "label": "start_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "msec",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "runtime",
          "label": "msec",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dest",
          "type": "Key<Keyed>",
          "is_schema": true,
          "schema_name": "KeyV3",
          "value": null,
          "help": "destination key",
          "label": "dest",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "exception",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "exception",
          "label": "exception",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "SplitFrameV3",
            "schema_type": "SplitFrame"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SplitFrameV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\ndataset | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Dataset |  | [] | []\nratios | false | critical | double[] | false |  | (null) | Split ratios - resulting number of split is ratios.length+1 |  | [] | []\ndest_keys | false | critical | Key<Frame>[] | true | FrameKeyV3 | (null) | Destination keys for each output frame split. |  | [] | []\nkey | false | critical | Key<Job> | true | JobKeyV3 | (null) | Job Key |  | [] | []\ndescription | false | critical | string | false |  | (null) | Job description |  | [] | []\ndest | false | critical | Key<Keyed> | true | KeyV3 | (null) | destination key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ndest_keys | Key<Frame>[] | true | FrameKeyV3 | (null) | Destination keys for each output frame split. |  | [] | []\nstatus | string | false |  | (null) | job status |  | [] | []\nprogress | float | false |  | 0.0 | progress, from 0 to 1 |  | [] | []\nprogress_msg | string | false |  | (null) | current progress status description |  | [] | []\nstart_time | long | false |  | 0 | Start time |  | [] | []\nmsec | long | false |  | 0 | runtime |  | [] | []\ndest | Key<Keyed> | true | KeyV3 | (null) | destination key |  | [] | []\nexception | string | false |  | (null) | exception |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@572b2d33 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GrepModelV3",
      "superclass": "ModelSchema",
      "type": "GrepModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "GrepParameters",
          "is_schema": true,
          "schema_name": "GrepParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "GrepOutput",
          "is_schema": true,
          "schema_name": "GrepModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GrepModelV3",
            "schema_type": "GrepModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GrepModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | GrepParameters | true | GrepParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | GrepOutput | true | GrepModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@53a49bfa | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "AboutV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "entries",
          "type": "Iced[]",
          "is_schema": true,
          "schema_name": "AboutEntryV3",
          "value": null,
          "help": "List of properties about this running H2O instance",
          "label": "entries",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "AboutV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  AboutV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nentries | Iced[] | true | AboutEntryV3 | (null) | List of properties about this running H2O instance |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5bfc64fc | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "SharedTreeModelV3",
      "superclass": "ModelSchema",
      "type": "SharedTreeModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Parameters",
          "is_schema": true,
          "schema_name": "ModelParametersSchema",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "Output",
          "is_schema": true,
          "schema_name": "ModelOutputSchema",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "SharedTreeModelV3",
            "schema_type": "SharedTreeModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  SharedTreeModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | Parameters | true | ModelParametersSchema | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | Output | true | ModelOutputSchema | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@174a0b92 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "CoxPHModelV3",
      "superclass": "ModelSchema",
      "type": "CoxPHModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "CoxPHParameters",
          "is_schema": true,
          "schema_name": "CoxPHParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "CoxPHOutput",
          "is_schema": true,
          "schema_name": "CoxPHModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "CoxPHModelV3",
            "schema_type": "CoxPHModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  CoxPHModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | CoxPHParameters | true | CoxPHParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | CoxPHOutput | true | CoxPHModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@7e3daa2f | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "FrameV3",
      "superclass": "Schema",
      "type": "Frame",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Key to inspect",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "row_offset",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Row offset to display",
          "label": "row_offset",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "row_count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of rows to display",
          "label": "row_count",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "checksum",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "rows",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Number of rows",
          "label": "rows",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "byte_size",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Total data size in bytes",
          "label": "byte_size",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "is_text",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Raw unparsed text",
          "label": "is_text",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "default_percentiles",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Default percentiles, from 0 to 1",
          "label": "default_percentiles",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "columns",
          "type": "Vec[]",
          "is_schema": true,
          "schema_name": "ColV2",
          "value": null,
          "help": "Columns",
          "label": "columns",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_models",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible models, if requested",
          "label": "compatible_models",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "vec_keys",
          "type": "Key<Vec>[]",
          "is_schema": true,
          "schema_name": "VecKeyV3",
          "value": null,
          "help": "The set of vector keys in the Frame",
          "label": "vec_keys",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "chunk_summary",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Chunk summary",
          "label": "chunk_summary",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "FrameV3",
            "schema_type": "Frame"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  FrameV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Frame> | true | FrameKeyV3 | (null) | Key to inspect |  | [] | []\nrow_offset | false | critical | long | false |  | 0 | Row offset to display |  | [] | []\nrow_count | false | critical | int | false |  | 0 | Number of rows to display |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nrow_count | int | false |  | 0 | Number of rows to display |  | [] | []\nchecksum | long | false |  | 0 | checksum |  | [] | []\nrows | long | false |  | 0 | Number of rows |  | [] | []\nbyte_size | long | false |  | 0 | Total data size in bytes |  | [] | []\nis_text | boolean | false |  | false | Raw unparsed text |  | [] | []\ndefault_percentiles | double[] | false |  | (null) | Default percentiles, from 0 to 1 |  | [] | []\ncolumns | Vec[] | true | ColV2 | (null) | Columns |  | [] | []\ncompatible_models | string[] | false |  | (null) | Compatible models, if requested |  | [] | []\nvec_keys | Key<Vec>[] | true | VecKeyV3 | (null) | The set of vector keys in the Frame |  | [] | []\nchunk_summary | TwoDimTable | true | TwoDimTableV3 | (null) | Chunk summary |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@2703469 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "Word2VecModelV3",
      "superclass": "ModelSchema",
      "type": "Word2VecModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "Word2VecParameters",
          "is_schema": true,
          "schema_name": "Word2VecParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "Word2VecOutput",
          "is_schema": true,
          "schema_name": "Word2VecModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "Word2VecModelV3",
            "schema_type": "Word2VecModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  Word2VecModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | Word2VecParameters | true | Word2VecParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | Word2VecOutput | true | Word2VecModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@1480dabf | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ProfilerNodeEntryV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "stacktrace",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Stack trace",
          "label": "stacktrace",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "count",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Profile Count",
          "label": "count",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ProfilerNodeEntryV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ProfilerNodeEntryV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nstacktrace | string | false |  | (null) | Stack trace |  | [] | []\ncount | int | false |  | 0 | Profile Count |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@17993c1d | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelMetricsBinomialGLMV3",
      "superclass": "ModelMetricsBinomialV3",
      "type": "ModelMetricsBinomialGLM",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "residual_deviance",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "residual deviance",
          "label": "residual_deviance",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "null_deviance",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "null deviance",
          "label": "null_deviance",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "aic",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "aic",
          "label": "aic",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "sigma",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The standard deviation of the training response.",
          "label": "sigma",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "logloss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The logarithmic loss for this scoring run.",
          "label": "logloss",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "AUC",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The AUC for this scoring run.",
          "label": "AUC",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "Gini",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Gini score for this run.",
          "label": "Gini",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "thresholds_and_metric_scores",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "The Metrics for various thresholds.",
          "label": "thresholds_and_metric_scores",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_criteria_and_metric_scores",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "The Metrics for various criteria.",
          "label": "max_criteria_and_metric_scores",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "The model used for this scoring run.",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the model used for this scoring run.",
          "label": "model_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "The frame used for this scoring run.",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the frame used for this scoring run.",
          "label": "frame_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Optional description for this scoring run (to note out-of-bag, sampled data, etc.)",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "The category (e.g., Clustering) for the model used for this scoring run.",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "duration_in_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The duration in mS for this scoring run.",
          "label": "duration_in_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The time in mS since the epoch for the start of this scoring run.",
          "label": "scoring_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "predictions",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Predictions Frame.",
          "label": "predictions",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelMetricsBinomialGLMV3",
            "schema_type": "ModelMetricsBinomialGLM"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsBinomialGLMV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | false | critical | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | false | critical | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nresidual_deviance | double | false |  | 0.0 | residual deviance |  | [] | []\nnull_deviance | double | false |  | 0.0 | null deviance |  | [] | []\naic | double | false |  | 0.0 | aic |  | [] | []\nsigma | double | false |  | 0.0 | The standard deviation of the training response. |  | [] | []\nlogloss | double | false |  | 0.0 | The logarithmic loss for this scoring run. |  | [] | []\nAUC | double | false |  | 0.0 | The AUC for this scoring run. |  | [] | []\nGini | double | false |  | 0.0 | The Gini score for this run. |  | [] | []\nthresholds_and_metric_scores | TwoDimTable | true | TwoDimTableV3 | (null) | The Metrics for various thresholds. |  | [] | []\nmax_criteria_and_metric_scores | TwoDimTable | true | TwoDimTableV3 | (null) | The Metrics for various criteria. |  | [] | []\nmodel | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\ndescription | string | false |  | (null) | Optional description for this scoring run (to note out-of-bag, sampled data, etc.) |  | [] | []\nmodel_category | enum | false |  | (null) | The category (e.g., Clustering) for the model used for this scoring run. | [Unknown, Binomial, Multinomial, Regression, Clustering] | [] | []\nduration_in_ms | long | false |  | 0 | The duration in mS for this scoring run. |  | [] | []\nscoring_time | long | false |  | 0 | The time in mS since the epoch for the start of this scoring run. |  | [] | []\npredictions | Frame | true | FrameV3 | (null) | Predictions Frame. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@4d39a005 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ModelMetricsMultinomialV3",
      "superclass": "ModelMetricsBase",
      "type": "ModelMetricsMultinomial",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "hit_ratios",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The hit ratios for this scoring run.",
          "label": "hit_ratios",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "hit_ratio_table",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "The hit ratio table for this scoring run.",
          "label": "hit_ratio_table",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "cm",
          "type": "ConfusionMatrix",
          "is_schema": true,
          "schema_name": "ConfusionMatrixV3",
          "value": null,
          "help": "The ConfusionMatrix object for this scoring run.",
          "label": "cm",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "logloss",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The logarithmic loss for this scoring run.",
          "label": "logloss",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "The model used for this scoring run.",
          "label": "model",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the model used for this scoring run.",
          "label": "model_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "The frame used for this scoring run.",
          "label": "frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "frame_checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The checksum for the frame used for this scoring run.",
          "label": "frame_checksum",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "description",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Optional description for this scoring run (to note out-of-bag, sampled data, etc.)",
          "label": "description",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "model_category",
          "type": "enum",
          "is_schema": false,
          "schema_name": "ModelCategory",
          "value": null,
          "help": "The category (e.g., Clustering) for the model used for this scoring run.",
          "label": "model_category",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [
            "Unknown",
            "Binomial",
            "Multinomial",
            "Regression",
            "Clustering"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "duration_in_ms",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The duration in mS for this scoring run.",
          "label": "duration_in_ms",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "scoring_time",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The time in mS since the epoch for the start of this scoring run.",
          "label": "scoring_time",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "predictions",
          "type": "Frame",
          "is_schema": true,
          "schema_name": "FrameV3",
          "value": null,
          "help": "Predictions Frame.",
          "label": "predictions",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "mse",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "The Mean Squared Error of the prediction for this scoring run.",
          "label": "mse",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ModelMetricsMultinomialV3",
            "schema_type": "ModelMetricsMultinomial"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ModelMetricsMultinomialV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nmodel | false | critical | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | false | critical | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | false | critical | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\nhit_ratios | float[] | false |  | (null) | The hit ratios for this scoring run. |  | [] | []\nhit_ratio_table | TwoDimTable | true | TwoDimTableV3 | (null) | The hit ratio table for this scoring run. |  | [] | []\ncm | ConfusionMatrix | true | ConfusionMatrixV3 | (null) | The ConfusionMatrix object for this scoring run. |  | [] | []\nlogloss | double | false |  | 0.0 | The logarithmic loss for this scoring run. |  | [] | []\nmodel | Key<Model> | true | ModelKeyV3 | (null) | The model used for this scoring run. |  | [] | []\nmodel_checksum | long | false |  | 0 | The checksum for the model used for this scoring run. |  | [] | []\nframe | Key<Frame> | true | FrameKeyV3 | (null) | The frame used for this scoring run. |  | [] | []\nframe_checksum | long | false |  | 0 | The checksum for the frame used for this scoring run. |  | [] | []\ndescription | string | false |  | (null) | Optional description for this scoring run (to note out-of-bag, sampled data, etc.) |  | [] | []\nmodel_category | enum | false |  | (null) | The category (e.g., Clustering) for the model used for this scoring run. | [Unknown, Binomial, Multinomial, Regression, Clustering] | [] | []\nduration_in_ms | long | false |  | 0 | The duration in mS for this scoring run. |  | [] | []\nscoring_time | long | false |  | 0 | The time in mS since the epoch for the start of this scoring run. |  | [] | []\npredictions | Frame | true | FrameV3 | (null) | Predictions Frame. |  | [] | []\nmse | double | false |  | 0.0 | The Mean Squared Error of the prediction for this scoring run. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@238cfdf | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ImportFilesV3",
      "superclass": "Schema",
      "type": "Iced",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "path",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "path",
          "label": "path",
          "required": true,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "files",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "files",
          "label": "files",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "keys",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "keys",
          "label": "keys",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "fails",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "fails",
          "label": "fails",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dels",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "dels",
          "label": "dels",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ImportFilesV3",
            "schema_type": "Iced"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ImportFilesV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\npath | true | critical | string | false |  | (null) | path |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nfiles | string[] | false |  | (null) | files |  | [] | []\nkeys | string[] | false |  | (null) | keys |  | [] | []\nfails | string[] | false |  | (null) | fails |  | [] | []\ndels | string[] | false |  | (null) | dels |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@5fd73a9c | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "NaiveBayesModelV3",
      "superclass": "ModelSchema",
      "type": "NaiveBayesModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "NaiveBayesParameters",
          "is_schema": true,
          "schema_name": "NaiveBayesParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "NaiveBayesOutput",
          "is_schema": true,
          "schema_name": "NaiveBayesModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "NaiveBayesModelV3",
            "schema_type": "NaiveBayesModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  NaiveBayesModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | NaiveBayesParameters | true | NaiveBayesParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | NaiveBayesOutput | true | NaiveBayesModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@2b4908ec | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "GLMParametersV3",
      "superclass": "SupervisedModelParametersSchema",
      "type": "GLMParameters",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "solver",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Solver",
          "value": null,
          "help": "solver to use, ADMM supports more features, L_BFGS scales better for datasets with many columns",
          "label": "solver",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "ADMM",
            "L_BFGS"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "standardize",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Standardize numeric columns to have zero mean and unit variance",
          "label": "standardize",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_iterations",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 50,
          "help": "Maximum number of iterations",
          "label": "max_iterations",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "beta_epsilon",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "beta esilon -> consider being converged if L1 norm of the current beta change is below this threshold",
          "label": "beta_epsilon",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "family",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Family",
          "value": null,
          "help": "Family.",
          "label": "family",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [
            "gaussian",
            "binomial",
            "poisson",
            "gamma"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "link",
          "type": "enum",
          "is_schema": false,
          "schema_name": "Link",
          "value": "family_default",
          "help": "",
          "label": "link",
          "required": false,
          "level": "secondary",
          "direction": "INPUT",
          "values": [
            "family_default",
            "identity",
            "logit",
            "log",
            "inverse",
            "tweedie"
          ],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "tweedie_variance_power",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Tweedie variance power",
          "label": "tweedie_variance_power",
          "required": false,
          "level": "secondary",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "tweedie_link_power",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Tweedie link power",
          "label": "tweedie_link_power",
          "required": false,
          "level": "secondary",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "alpha",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "distribution of regularization between L1 and L2.",
          "label": "alpha",
          "required": false,
          "level": "secondary",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "lambda",
          "type": "double[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "regularization strength",
          "label": "lambda",
          "required": false,
          "level": "secondary",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "prior",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "prior probability for y==1. To be used only for logistic regression iff the data has been sampled and the mean of response does not reflect reality.",
          "label": "prior",
          "required": false,
          "level": "expert",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "lambda_search",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "use lambda search starting at lambda max, given lambda is then interpreted as lambda min",
          "label": "lambda_search",
          "required": false,
          "level": "secondary",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "nlambdas",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "number of lambdas to be used in a search",
          "label": "nlambdas",
          "required": false,
          "level": "expert",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "lambda_min_ratio",
          "type": "double",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "min lambda used in lambda search, specified as a ratio of lambda_max",
          "label": "lambda_min_ratio",
          "required": false,
          "level": "expert",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "use_all_factor_levels",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "By default, first factor level is skipped from the possible set of predictors. Set this flag if you want use all of the levels. Needs sufficient regularization to solve!",
          "label": "use_all_factor_levels",
          "required": false,
          "level": "secondary",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "beta_constraints",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "beta constraints",
          "label": "beta_constraints",
          "required": false,
          "level": "critical",
          "direction": "INPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "response_column",
          "type": "VecSpecifier",
          "is_schema": true,
          "schema_name": "ColSpecifierV2",
          "value": null,
          "help": "Response column",
          "label": "response_column",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": [
            "ignored_columns"
          ]
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "balance_classes",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Balance training data class counts via over/under-sampling (for imbalanced data).",
          "label": "balance_classes",
          "required": false,
          "level": "secondary",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "class_sampling_factors",
          "type": "float[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes.",
          "label": "class_sampling_factors",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_after_balance_size",
          "type": "float",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes.",
          "label": "max_after_balance_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_confusion_matrix_size",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Maximum size (# classes) for confusion matrices to be printed in the Logs",
          "label": "max_confusion_matrix_size",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "max_hit_ratio_k",
          "type": "int",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable)",
          "label": "max_hit_ratio_k",
          "required": false,
          "level": "expert",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "destination_key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Destination key for this model; auto-generated if not specified",
          "label": "destination_key",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "training_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Training frame",
          "label": "training_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "validation_frame",
          "type": "Key<Frame>",
          "is_schema": true,
          "schema_name": "FrameKeyV3",
          "value": null,
          "help": "Validation frame",
          "label": "validation_frame",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "ignored_columns",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Ignored columns",
          "label": "ignored_columns",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [
            "training_frame",
            "validation_frame"
          ],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "dropNA20Cols",
          "type": "boolean",
          "is_schema": false,
          "schema_name": null,
          "value": false,
          "help": "Drop columns with more than 20% missing values",
          "label": "dropNA20Cols",
          "required": false,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "GLMParametersV3",
            "schema_type": "GLMParameters"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  GLMParametersV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nsolver | false | critical | enum | false |  | (null) | solver to use, ADMM supports more features, L_BFGS scales better for datasets with many columns | [ADMM, L_BFGS] | [] | []\nstandardize | false | critical | boolean | false |  | false | Standardize numeric columns to have zero mean and unit variance |  | [] | []\nmax_iterations | false | critical | int | false |  | 50 | Maximum number of iterations |  | [] | []\nbeta_epsilon | false | critical | double | false |  | 0.0 | beta esilon -> consider being converged if L1 norm of the current beta change is below this threshold |  | [] | []\nfamily | false | critical | enum | false |  | (null) | Family. | [gaussian, binomial, poisson, gamma] | [] | []\nlink | false | secondary | enum | false |  | family_default |  | [family_default, identity, logit, log, inverse, tweedie] | [] | []\ntweedie_variance_power | false | secondary | double | false |  | 0.0 | Tweedie variance power |  | [] | []\ntweedie_link_power | false | secondary | double | false |  | 0.0 | Tweedie link power |  | [] | []\nalpha | false | secondary | double[] | false |  | (null) | distribution of regularization between L1 and L2. |  | [] | []\nlambda | false | secondary | double[] | false |  | (null) | regularization strength |  | [] | []\nprior | false | expert | double | false |  | 0.0 | prior probability for y==1. To be used only for logistic regression iff the data has been sampled and the mean of response does not reflect reality. |  | [] | []\nlambda_search | false | secondary | boolean | false |  | false | use lambda search starting at lambda max, given lambda is then interpreted as lambda min |  | [] | []\nnlambdas | false | expert | int | false |  | 0 | number of lambdas to be used in a search |  | [] | []\nlambda_min_ratio | false | expert | double | false |  | 0.0 | min lambda used in lambda search, specified as a ratio of lambda_max |  | [] | []\nuse_all_factor_levels | false | secondary | boolean | false |  | false | By default, first factor level is skipped from the possible set of predictors. Set this flag if you want use all of the levels. Needs sufficient regularization to solve! |  | [] | []\nbeta_constraints | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | beta constraints |  | [] | []\nresponse_column | false | critical | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | false | secondary | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | false | expert | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | false | expert | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | false | expert | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | false | expert | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | false | critical | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | false | critical | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | false | critical | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | false | critical | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nresponse_column | VecSpecifier | true | ColSpecifierV2 | (null) | Response column |  | [training_frame, validation_frame] | [ignored_columns]\nbalance_classes | boolean | false |  | false | Balance training data class counts via over/under-sampling (for imbalanced data). |  | [] | []\nclass_sampling_factors | float[] | false |  | (null) | Desired over/under-sampling ratios per class (in lexicographic order). If not specified, sampling factors will be automatically computed to obtain class balance during training. Requires balance_classes. |  | [] | []\nmax_after_balance_size | float | false |  | 0.0 | Maximum relative size of the training data after balancing class counts (can be less than 1.0). Requires balance_classes. |  | [] | []\nmax_confusion_matrix_size | int | false |  | 0 | Maximum size (# classes) for confusion matrices to be printed in the Logs |  | [] | []\nmax_hit_ratio_k | int | false |  | 0 | Max. number (top K) of predictions to use for hit ratio computation (for multi-class only, 0 to disable) |  | [] | []\ndestination_key | Key<Model> | true | ModelKeyV3 | (null) | Destination key for this model; auto-generated if not specified |  | [] | []\ntraining_frame | Key<Frame> | true | FrameKeyV3 | (null) | Training frame |  | [] | []\nvalidation_frame | Key<Frame> | true | FrameKeyV3 | (null) | Validation frame |  | [] | []\nignored_columns | string[] | false |  | (null) | Ignored columns |  | [training_frame, validation_frame] | []\ndropNA20Cols | boolean | false |  | false | Drop columns with more than 20% missing values |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@118b05b2 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "DeepLearningModelV3",
      "superclass": "ModelSchema",
      "type": "DeepLearningModel",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "key",
          "type": "Key<Model>",
          "is_schema": true,
          "schema_name": "ModelKeyV3",
          "value": null,
          "help": "Model key",
          "label": "key",
          "required": true,
          "level": "critical",
          "direction": "INOUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The algo name for this Model.",
          "label": "algo",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "algo_full_name",
          "type": "string",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM).",
          "label": "algo_full_name",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "parameters",
          "type": "DeepLearningParameters",
          "is_schema": true,
          "schema_name": "DeepLearningParametersV3",
          "value": null,
          "help": "The build parameters for the model (e.g. K for KMeans).",
          "label": "parameters",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "output",
          "type": "DeepLearningModelOutput",
          "is_schema": true,
          "schema_name": "DeepLearningModelOutputV3",
          "value": null,
          "help": "The build output for the model (e.g. the cluster centers for KMeans).",
          "label": "output",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "compatible_frames",
          "type": "string[]",
          "is_schema": false,
          "schema_name": null,
          "value": null,
          "help": "Compatible frames, if requested",
          "label": "compatible_frames",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "checksum",
          "type": "long",
          "is_schema": false,
          "schema_name": null,
          "value": 0,
          "help": "Checksum for all the things that go into building the Model.",
          "label": "checksum",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "DeepLearningModelV3",
            "schema_type": "DeepLearningModel"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  DeepLearningModelV3\n---\n## input fields\nname | required? | level | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | true | critical | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nkey | Key<Model> | true | ModelKeyV3 | (null) | Model key |  | [] | []\nalgo | string | false |  | (null) | The algo name for this Model. |  | [] | []\nalgo_full_name | string | false |  | (null) | The pretty algo name for this Model (e.g., Generalized Linear Model, rather than GLM). |  | [] | []\nparameters | DeepLearningParameters | true | DeepLearningParametersV3 | (null) | The build parameters for the model (e.g. K for KMeans). |  | [] | []\noutput | DeepLearningModelOutput | true | DeepLearningModelOutputV3 | (null) | The build output for the model (e.g. the cluster centers for KMeans). |  | [] | []\ncompatible_frames | string[] | false |  | (null) | Compatible frames, if requested |  | [] | []\nchecksum | long | false |  | 0 | Checksum for all the things that go into building the Model. |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@3e22f21d | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    },
    {
      "__meta": {
        "schema_version": 3,
        "schema_name": "SchemaMetadataV3",
        "schema_type": "SchemaMetadata"
      },
      "version": 3,
      "name": "ConfusionMatrixV3",
      "superclass": "ConfusionMatrixBase",
      "type": "ConfusionMatrix",
      "fields": [
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "table",
          "type": "TwoDimTable",
          "is_schema": true,
          "schema_name": "TwoDimTableV3",
          "value": null,
          "help": "Annotated confusion matrix",
          "label": "table",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        },
        {
          "__meta": {
            "schema_version": 3,
            "schema_name": "FieldMetadataV3",
            "schema_type": "FieldMetadata"
          },
          "name": "__meta",
          "type": "Schema.Meta",
          "is_schema": false,
          "schema_name": null,
          "value": {
            "schema_version": 3,
            "schema_name": "ConfusionMatrixV3",
            "schema_type": "ConfusionMatrix"
          },
          "help": "Metadata on this schema instance, to make it self-describing.",
          "label": "__meta",
          "required": false,
          "level": "critical",
          "direction": "OUTPUT",
          "values": [],
          "json": true,
          "is_member_of_frames": [],
          "is_mutually_exclusive_with": []
        }
      ],
      "markdown": "[//]: # (Preview with http://jbt.github.io/markdown-editor)\n# schema  ConfusionMatrixV3\n---\n## input fields\n(none)\n\n## output fields\nname | type | schema? | schema | default | description | values | is member of frames | is mutually exclusive with\n--- | --- | --- | --- | --- | --- | --- | --- | ---\ntable | TwoDimTable | true | TwoDimTableV3 | (null) | Annotated confusion matrix |  | [] | []\n__meta | Schema.Meta | false |  | water.api.Schema$Meta@68456dc9 | Metadata on this schema instance, to make it self-describing. |  | [] | []\n"
    }
  ]
}